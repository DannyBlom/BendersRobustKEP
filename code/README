Additional information about the code for the paper

   Cutting Plane Approaches for the Robust Kidney Exchange Problem
   by Danny Blom, Christopher Hojny, and Bart Smeulders.


I STEPS OF THE CODE

1. To run the program, enter
   "bin/fullrecoursekidney.$(OSTYPE).$(ARCH).$(COMP).$(OPT).$(LPS)
   (e.g. "bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2") together with
   two mandatory arguments. The first argument is the path of the file
   encoding the graph instance; the second argument is the upper bound on
   the number of attacks. Additional parameters can be:

   -s <setting file>
   -t <time limit>
   -m <mem limit>
   -n <node limit>
   -d <display frequency>

2. We assume that the graphs are encoded in the following format, which we
   explain using an example:

   Nr_Pairs = 19              (number of pairs [19])
   Nr_NDD = 1                 (number of NDDs [1])
   Nr_Arcs = 139              (number of arcs in graph [139])
   0 p_0                      (node label [0] and attack probability [p_0],
   1 p_1                       the latter is not used by our code,
   ...                         we assume that first all pairs and then
   19 p_19                     all NDDs are listed)
   (0,2), 0, 1                (arcs in graph, sorted lexicographically)
   (0,4), 0, 1
   ...


3. After reading the problem, a MIP is created and solved. Depending on
   the parameter setting, the MIP is based on the branch-and-bound procedure,
   the Benders method using the cycle-chain formulation, or the Benders
   method using the PICE formulation.


II PARAMETERS FOR SETTINGS FILES

There exist different parameters that can be used to change the behavior
of the code. The most important one is

kidney/method = value

which controls the method to solve the full recourse model. If value is 1,
the cycle-chain Benders method is used, value 2 uses the PICEF Benders
method, and 3 uses the branch-and-bound procedure.

Parameters

kidney/maxcyclelength
kidney/maxchainlength

control the maximum length of cycles and chains of the model. The remaining
parameters control, i.a., whether lifting is used in the Benders models.
A list of all parameters including a short description can be found in
kidneyParams.c.

III REPRODUCING TABLES OF THE SUBMISSION

1. To reproduce the tables, add a soft link to the directory
   full-recourse-kidney-1.0/code/scripts that contains the results
    of the numerical experiments (we provide these results in
    full-recourse-kidney-1.0/results)

2. Call the script

   ./paper_generate_table.sh <cyclelength> <average>

   to generate the table for different chain lengths and maximum
   cycle length <cyclelength>. The argument <average> is either
   a, g, or s, and controls whether average running time is given
   in arithmetic mean, geometric mean, or shifted geometric mean.

   Similarly,

   ./paper_generate_lifting_table.sh <cyclelength> <average> <method>

   produces tables to illustrate the impact of lifting. Argument
   <method>, taking values c or p, controls whether the Benders model
   using the cycle-chain formulation or PICE formulation is used.

  Finally,

  ./paper_generate_aggr_lifting_table.sh <cyclelength>> <average>> <method>

  generates the aggregated tables illustrating the impact of lifting.

3. If you want to rerun these experiments, you need to generate the instances.
   The data for the instances can be downloaded from

   https://rdm.inesctec.pt/dataset/ii-2020-001

   using the data sets "20", "50", and "100". To generate instances
   files that can be read by the code, convert the instances using
   the script code/scripts/InstanceConverter.jl. An exemplary call of
   this script is

   julia InstanceConverter.jl /path/to/data/20_0_compat.txt /path/to/data/20_0_pairs.txt output.txt

   which takes the compatability and pairs data of instance 20_0
   and converts it into the file output.txt.

   Create a directory instances/KlimentovaInstances<#vertices> for
   the instances with #vertices vertices and put all converted instances
   into this repository. In code/check create a soft link "instances"
   pointing to the instances directory.

   Now, run experiments for all instances mentioned in

   check/testset/klimentova<nvertices>.test
