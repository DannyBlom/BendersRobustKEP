
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_0.txt ===========
-----------------------------
Thu Nov 24 11:39:41 CET 2022
-----------------------------
@03 1669286381
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_0.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_0.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 16463

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 415257
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.33
Create the model
Time to create master model:	0.95
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 43.000000.
@97 Set up Glorie model 1.
Attack Pattern: 3 	4 	17 	
update upper bound from 100000000000000000000.000000 to 38.000000
@95 optimal solution found: ub is 38.000000 and masterbound is 43.000000
nattacks: 3
first attack: 3
@98 masteriteration 2: objective value 39.000000.
@97 Set up Glorie model 2.
Attack Pattern: 2 	16 	98 	
update upper bound from 100000000000000000000.000000 to 37.000000
@95 optimal solution found: ub is 37.000000 and masterbound is 39.000000
nattacks: 3
first attack: 2
@98 masteriteration 3: objective value 39.000000.
@97 Set up Glorie model 3.
Attack Pattern: 3 	11 	26 	
@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3615.310000 seconds (stage 2: 204.560000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       3       4      17
[scenario]    1:	       2      16      98
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1295455 (1295454 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 791 initial, 791 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289999
-----------------------------
Thu Nov 24 12:39:59 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_1.txt ===========
-----------------------------
Thu Nov 24 11:39:42 CET 2022
-----------------------------
@03 1669286382
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_1.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_1.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 12889

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1144552
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.88
Create the model
Time to create master model:	2.57
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 47.000000.
@97 Set up Glorie model 1.
Attack Pattern: 2 	3 	4 	
@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3701.690000 seconds (stage 2: 1686.190000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1157542 (1157541 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290088
-----------------------------
Thu Nov 24 12:41:28 CET 2022
-----------------------------

=ready=
Linux mcs-computeA012 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_2.txt ===========
-----------------------------
Mon Oct 31 16:52:55 CET 2022
-----------------------------
@03 1667231575
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_2.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_2.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 37929

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 111945
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.08
Create the model
Time to create master model:	0.26
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 48.000000.
@97 Set up Glorie model 1.
Attack Pattern: 18 	34 	35 	
update upper bound from 100000000000000000000.000000 to 45.000000
@95 optimal solution found: ub is 45.000000 and masterbound is 48.000000
nattacks: 3
first attack: 18
@98 masteriteration 2: objective value 46.000000.
@97 Set up Glorie model 2.
Attack Pattern: 0 	1 	2 	
update upper bound from 100000000000000000000.000000 to 44.000000
@95 optimal solution found: ub is 44.000000 and masterbound is 46.000000
nattacks: 3
first attack: 0
@98 masteriteration 3: objective value 45.000000.
@97 Set up Glorie model 3.
Attack Pattern: 0 	11 	12 	
update upper bound from 100000000000000000000.000000 to 43.000000
@95 optimal solution found: ub is 43.000000 and masterbound is 45.000000
nattacks: 3
first attack: 0
@98 masteriteration 4: objective value 44.000000.
@97 Set up Glorie model 4.
Attack Pattern: 2 	8 	10 	
update upper bound from 100000000000000000000.000000 to 45.000000
@95 branch on node 2
Attack Pattern: 2 	8 	10 	
@95 branch on node 8
Attack Pattern: 2 	8 	10 	
@95 branch on node 10
@95 prune node: 3 / 3 or (lb 36.000000 >= ub 45.000000)
Attack Pattern: 2 	8 	31 	
@95 branch on node 31
@95 prune node: 3 / 3 or (lb 36.000000 >= ub 45.000000)
Attack Pattern: 2 	8 	15 	
@95 branch on node 15
@95 prune node: 3 / 3 or (lb 36.000000 >= ub 45.000000)
Attack Pattern: 2 	8 	90 	
@95 branch on node 90
update upper bound from 45.000000 to 43.000000
@95 optimal solution found: ub is 43.000000 and masterbound is 44.000000
nattacks: 3
first attack: 2
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3602.770000 seconds (stage 2: 247.720000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	      18      34      35
[scenario]    1:	       0       1       2
[scenario]    2:	       0      11      12
[scenario]    3:	       2       8      90
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 749867 (749866 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 1397 initial, 1397 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1667235180
-----------------------------
Mon Oct 31 17:53:00 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_3.txt ===========
-----------------------------
Thu Nov 24 11:39:43 CET 2022
-----------------------------
@03 1669286383
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_3.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_3.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 26165

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1528644
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	1.19
Create the model
Time to create master model:	3.35
Solve the model
@99 Start master loop of trilevel optimization algorithm.
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3781.850000 seconds (stage 2: 0.000000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1554910 (1554909 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290168
-----------------------------
Thu Nov 24 12:42:48 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_4.txt ===========
-----------------------------
Thu Nov 24 11:39:59 CET 2022
-----------------------------
@03 1669286399
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_4.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_4.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 26420

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 935073
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.83
Create the model
Time to create master model:	1.97
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 62.000000.
@97 Set up Glorie model 1.
Attack Pattern: 2 	4 	6 	
update upper bound from 100000000000000000000.000000 to 58.000000
@95 optimal solution found: ub is 58.000000 and masterbound is 62.000000
nattacks: 3
first attack: 2
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 4778.790000 seconds (stage 2: 568.150000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       2       4       6
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1923183 (1923182 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 494 initial, 494 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669291181
-----------------------------
Thu Nov 24 12:59:41 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_5.txt ===========
-----------------------------
Thu Nov 24 11:40:08 CET 2022
-----------------------------
@03 1669286408
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_5.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_5.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 17405

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 677587
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.52
Create the model
Time to create master model:	1.33
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 39.000000.
@97 Set up Glorie model 1.
Attack Pattern: 6 	14 	15 	
update upper bound from 100000000000000000000.000000 to 33.000000
@95 optimal solution found: ub is 33.000000 and masterbound is 39.000000
nattacks: 3
first attack: 6
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3630.560000 seconds (stage 2: 69.220000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       6      14      15
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1390182 (1390181 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 496 initial, 496 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290042
-----------------------------
Thu Nov 24 12:40:42 CET 2022
-----------------------------

=ready=
Linux mcs-computeA008 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_6.txt ===========
-----------------------------
Mon Oct 31 16:54:57 CET 2022
-----------------------------
@03 1667231697
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_6.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_6.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 6558

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 49780
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.03
Create the model
Time to create master model:	0.08
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 41.000000.
@97 Set up Glorie model 1.
Attack Pattern: 3 	8 	10 	
update upper bound from 100000000000000000000.000000 to 35.000000
@95 optimal solution found: ub is 35.000000 and masterbound is 41.000000
nattacks: 3
first attack: 3
@98 masteriteration 2: objective value 36.000000.
@97 Set up Glorie model 2.
Attack Pattern: 8 	10 	13 	
update upper bound from 100000000000000000000.000000 to 37.000000
@95 branch on node 8
Attack Pattern: 8 	10 	13 	
@95 branch on node 10
Attack Pattern: 8 	10 	13 	
@95 branch on node 13
@95 prune node: 3 / 3 or (lb 28.000000 >= ub 37.000000)
Attack Pattern: 8 	10 	88 	
@95 branch on node 88
update upper bound from 37.000000 to 34.000000
@95 optimal solution found: ub is 34.000000 and masterbound is 36.000000
nattacks: 3
first attack: 8
@98 masteriteration 3: objective value 34.000000.
@97 Set up Glorie model 3.
Attack Pattern: 3 	4 	8 	
update upper bound from 100000000000000000000.000000 to 36.000000
@95 branch on node 3
Attack Pattern: 3 	4 	8 	
@95 branch on node 4
Attack Pattern: 3 	4 	8 	
@95 branch on node 8
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	31 	
@95 branch on node 31
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	50 	
@95 branch on node 50
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	22 	
@95 branch on node 22
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	11 	
@95 branch on node 11
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	32 	
@95 branch on node 32
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	89 	
@95 branch on node 89
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	84 	
@95 branch on node 84
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	13 	
@95 branch on node 13
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	88 	
@95 branch on node 88
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	67 	
@95 branch on node 67
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	20 	
@95 branch on node 20
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	17 	
@95 branch on node 17
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	85 	
@95 branch on node 85
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	69 	
@95 branch on node 69
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	70 	
@95 branch on node 70
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	21 	
@95 branch on node 21
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	64 	
@95 branch on node 64
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	39 	
@95 branch on node 39
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	38 	
@95 branch on node 38
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	98 	
@95 branch on node 98
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	10 	
@95 branch on node 10
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	94 	
@95 branch on node 94
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	78 	
@95 branch on node 78
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	92 	
@95 branch on node 92
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	40 	
@95 branch on node 40
@95 prune node: 3 / 3 or (lb 28.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	57 	
@95 branch on node 57
@95 prune node: 3 / 3 or (lb 28.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	75 	
@95 branch on node 75
@95 prune node: 3 / 3 or (lb 28.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	36 	
@95 branch on node 36
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	82 	
@95 branch on node 82
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	99 	
@95 branch on node 99
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	87 	
@95 branch on node 87
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	91 	
@95 branch on node 91
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	0 	
@95 branch on node 0
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	1 	
@95 branch on node 1
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	2 	
@95 branch on node 2
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	5 	
@95 branch on node 5
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	6 	
@95 branch on node 6
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	7 	
@95 branch on node 7
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	9 	
@95 branch on node 9
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	12 	
@95 branch on node 12
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	14 	
@95 branch on node 14
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	15 	
@95 branch on node 15
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	16 	
@95 branch on node 16
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	18 	
@95 branch on node 18
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	19 	
@95 branch on node 19
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	23 	
@95 branch on node 23
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	24 	
@95 branch on node 24
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	25 	
@95 branch on node 25
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	26 	
@95 branch on node 26
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	27 	
@95 branch on node 27
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	28 	
@95 branch on node 28
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	29 	
@95 branch on node 29
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	30 	
@95 branch on node 30
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	33 	
@95 branch on node 33
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	34 	
@95 branch on node 34
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	35 	
@95 branch on node 35
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	37 	
@95 branch on node 37
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	41 	
@95 branch on node 41
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	42 	
@95 branch on node 42
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	43 	
@95 branch on node 43
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	44 	
@95 branch on node 44
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	45 	
@95 branch on node 45
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	46 	
@95 branch on node 46
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	47 	
@95 branch on node 47
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	48 	
@95 branch on node 48
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	49 	
@95 branch on node 49
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	51 	
@95 branch on node 51
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	52 	
@95 branch on node 52
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	53 	
@95 branch on node 53
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	54 	
@95 branch on node 54
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	55 	
@95 branch on node 55
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	56 	
@95 branch on node 56
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	58 	
@95 branch on node 58
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	59 	
@95 branch on node 59
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	60 	
@95 branch on node 60
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	61 	
@95 branch on node 61
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	62 	
@95 branch on node 62
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	63 	
@95 branch on node 63
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	65 	
@95 branch on node 65
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	66 	
@95 branch on node 66
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	68 	
@95 branch on node 68
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	71 	
@95 branch on node 71
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	72 	
@95 branch on node 72
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	73 	
@95 branch on node 73
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	74 	
@95 branch on node 74
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	76 	
@95 branch on node 76
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	77 	
@95 branch on node 77
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	79 	
@95 branch on node 79
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	80 	
@95 branch on node 80
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	81 	
@95 branch on node 81
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	83 	
@95 branch on node 83
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	86 	
@95 branch on node 86
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	90 	
@95 branch on node 90
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	93 	
@95 branch on node 93
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	95 	
@95 branch on node 95
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	96 	
@95 branch on node 96
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 36.000000)
Attack Pattern: 3 	4 	97 	
@95 branch on node 97
Attack Pattern: 3 	96 	8 	
@95 branch on node 96
Attack Pattern: 3 	96 	8 	
update upper bound from 36.000000 to 35.000000
@95 branch on node 8
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 35.000000)
Attack Pattern: 3 	96 	31 	
@95 branch on node 31
update upper bound from 35.000000 to 34.000000
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 3 	96 	50 	
@95 branch on node 50
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 3 	96 	22 	
@95 branch on node 22
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 3 	96 	11 	
@95 branch on node 11
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 3 	96 	32 	
@95 branch on node 32
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 3 	96 	89 	
@95 branch on node 89
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 3 	96 	84 	
@95 branch on node 84
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 3 	96 	13 	
@95 branch on node 13
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 3 	96 	88 	
@95 branch on node 88
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 3 	96 	67 	
@95 branch on node 67
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 3 	96 	20 	
@95 branch on node 20
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 3 	96 	17 	
@95 branch on node 17
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 3 	96 	85 	
@95 branch on node 85
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 3 	96 	69 	
@95 branch on node 69
update upper bound from 34.000000 to 33.000000
@95 optimal solution found: ub is 33.000000 and masterbound is 34.000000
nattacks: 3
first attack: 3
@98 masteriteration 4: objective value 34.000000.
@97 Set up Glorie model 4.
Attack Pattern: 11 	12 	22 	
update upper bound from 100000000000000000000.000000 to 35.000000
@95 branch on node 11
Attack Pattern: 11 	12 	22 	
@95 branch on node 12
Attack Pattern: 11 	12 	22 	
@95 branch on node 22
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 35.000000)
Attack Pattern: 11 	12 	75 	
@95 branch on node 75
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 35.000000)
Attack Pattern: 11 	12 	39 	
@95 branch on node 39
update upper bound from 35.000000 to 34.000000
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	38 	
@95 branch on node 38
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	31 	
@95 branch on node 31
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	50 	
@95 branch on node 50
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	36 	
@95 branch on node 36
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	82 	
@95 branch on node 82
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	63 	
@95 branch on node 63
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	97 	
@95 branch on node 97
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	84 	
@95 branch on node 84
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	96 	
@95 branch on node 96
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	72 	
@95 branch on node 72
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	88 	
@95 branch on node 88
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	83 	
@95 branch on node 83
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	94 	
@95 branch on node 94
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	98 	
@95 branch on node 98
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	10 	
@95 branch on node 10
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	67 	
@95 branch on node 67
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	86 	
@95 branch on node 86
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	92 	
@95 branch on node 92
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	99 	
@95 branch on node 99
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	85 	
@95 branch on node 85
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	89 	
@95 branch on node 89
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	32 	
@95 branch on node 32
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	28 	
@95 branch on node 28
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	41 	
@95 branch on node 41
@95 prune node: 3 / 3 or (lb 28.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	70 	
@95 branch on node 70
@95 prune node: 3 / 3 or (lb 28.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	78 	
@95 branch on node 78
@95 prune node: 3 / 3 or (lb 28.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	3 	
@95 branch on node 3
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	20 	
@95 branch on node 20
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	19 	
@95 branch on node 19
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	69 	
@95 branch on node 69
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	0 	
@95 branch on node 0
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	1 	
@95 branch on node 1
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	2 	
@95 branch on node 2
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	4 	
@95 branch on node 4
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	5 	
@95 branch on node 5
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	6 	
@95 branch on node 6
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	7 	
@95 branch on node 7
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	8 	
@95 branch on node 8
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	9 	
@95 branch on node 9
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	13 	
@95 branch on node 13
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	14 	
@95 branch on node 14
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	15 	
@95 branch on node 15
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	16 	
@95 branch on node 16
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	17 	
@95 branch on node 17
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	18 	
@95 branch on node 18
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	21 	
@95 branch on node 21
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	23 	
@95 branch on node 23
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	24 	
@95 branch on node 24
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	25 	
@95 branch on node 25
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	26 	
@95 branch on node 26
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	27 	
@95 branch on node 27
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	29 	
@95 branch on node 29
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	30 	
@95 branch on node 30
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	33 	
@95 branch on node 33
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	34 	
@95 branch on node 34
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	35 	
@95 branch on node 35
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	37 	
@95 branch on node 37
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	40 	
@95 branch on node 40
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	42 	
@95 branch on node 42
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	43 	
@95 branch on node 43
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	44 	
@95 branch on node 44
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	45 	
@95 branch on node 45
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	46 	
@95 branch on node 46
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	47 	
@95 branch on node 47
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	48 	
@95 branch on node 48
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	49 	
@95 branch on node 49
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	51 	
@95 branch on node 51
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	52 	
@95 branch on node 52
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	53 	
@95 branch on node 53
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	54 	
@95 branch on node 54
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	55 	
@95 branch on node 55
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	56 	
@95 branch on node 56
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	57 	
@95 branch on node 57
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	58 	
@95 branch on node 58
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	59 	
@95 branch on node 59
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	60 	
@95 branch on node 60
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	61 	
@95 branch on node 61
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	62 	
@95 branch on node 62
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	64 	
@95 branch on node 64
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	65 	
@95 branch on node 65
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	66 	
@95 branch on node 66
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	68 	
@95 branch on node 68
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	71 	
@95 branch on node 71
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	73 	
@95 branch on node 73
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	74 	
@95 branch on node 74
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	76 	
@95 branch on node 76
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	77 	
@95 branch on node 77
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	79 	
@95 branch on node 79
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	80 	
@95 branch on node 80
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	81 	
@95 branch on node 81
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	87 	
@95 branch on node 87
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	90 	
@95 branch on node 90
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	91 	
@95 branch on node 91
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	93 	
@95 branch on node 93
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	12 	95 	
@95 branch on node 95
Attack Pattern: 11 	53 	22 	
@95 branch on node 53
Attack Pattern: 11 	53 	22 	
@95 branch on node 22
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	75 	
@95 branch on node 75
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	39 	
@95 branch on node 39
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	38 	
@95 branch on node 38
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	31 	
@95 branch on node 31
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	50 	
@95 branch on node 50
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	36 	
@95 branch on node 36
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	82 	
@95 branch on node 82
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	63 	
@95 branch on node 63
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	97 	
@95 branch on node 97
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	84 	
@95 branch on node 84
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	96 	
@95 branch on node 96
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	72 	
@95 branch on node 72
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	88 	
@95 branch on node 88
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	83 	
@95 branch on node 83
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	94 	
@95 branch on node 94
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	98 	
@95 branch on node 98
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	10 	
@95 branch on node 10
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	67 	
@95 branch on node 67
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	86 	
@95 branch on node 86
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	92 	
@95 branch on node 92
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	99 	
@95 branch on node 99
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	85 	
@95 branch on node 85
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	89 	
@95 branch on node 89
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	32 	
@95 branch on node 32
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	28 	
@95 branch on node 28
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	41 	
@95 branch on node 41
@95 prune node: 3 / 3 or (lb 28.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	70 	
@95 branch on node 70
@95 prune node: 3 / 3 or (lb 28.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	78 	
@95 branch on node 78
@95 prune node: 3 / 3 or (lb 28.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	3 	
@95 branch on node 3
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	20 	
@95 branch on node 20
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	19 	
@95 branch on node 19
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	69 	
@95 branch on node 69
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	0 	
@95 branch on node 0
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	1 	
@95 branch on node 1
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	2 	
@95 branch on node 2
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	4 	
@95 branch on node 4
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	5 	
@95 branch on node 5
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	6 	
@95 branch on node 6
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	7 	
@95 branch on node 7
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	8 	
@95 branch on node 8
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	9 	
@95 branch on node 9
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	13 	
@95 branch on node 13
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	14 	
@95 branch on node 14
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	15 	
@95 branch on node 15
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	16 	
@95 branch on node 16
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	17 	
@95 branch on node 17
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	18 	
@95 branch on node 18
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	21 	
@95 branch on node 21
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	23 	
@95 branch on node 23
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	24 	
@95 branch on node 24
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	25 	
@95 branch on node 25
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	26 	
@95 branch on node 26
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	27 	
@95 branch on node 27
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	29 	
@95 branch on node 29
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	30 	
@95 branch on node 30
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	33 	
@95 branch on node 33
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	34 	
@95 branch on node 34
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	35 	
@95 branch on node 35
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	37 	
@95 branch on node 37
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	40 	
@95 branch on node 40
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	42 	
@95 branch on node 42
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	43 	
@95 branch on node 43
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	44 	
@95 branch on node 44
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	45 	
@95 branch on node 45
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	46 	
@95 branch on node 46
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	47 	
@95 branch on node 47
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	48 	
@95 branch on node 48
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	49 	
@95 branch on node 49
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	51 	
@95 branch on node 51
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	52 	
@95 branch on node 52
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	54 	
@95 branch on node 54
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	55 	
@95 branch on node 55
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	56 	
@95 branch on node 56
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	57 	
@95 branch on node 57
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	58 	
@95 branch on node 58
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	59 	
@95 branch on node 59
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	60 	
@95 branch on node 60
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	61 	
@95 branch on node 61
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	62 	
@95 branch on node 62
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	64 	
@95 branch on node 64
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	65 	
@95 branch on node 65
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	66 	
@95 branch on node 66
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	68 	
@95 branch on node 68
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	71 	
@95 branch on node 71
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	73 	
@95 branch on node 73
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	74 	
@95 branch on node 74
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	76 	
@95 branch on node 76
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	77 	
@95 branch on node 77
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	79 	
@95 branch on node 79
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	80 	
@95 branch on node 80
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	81 	
@95 branch on node 81
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	87 	
@95 branch on node 87
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	90 	
@95 branch on node 90
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	91 	
@95 branch on node 91
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	93 	
@95 branch on node 93
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 11 	53 	95 	
@95 branch on node 95
Attack Pattern: 11 	21 	22 	
@95 branch on node 21
Attack Pattern: 11 	21 	22 	
@95 branch on node 22
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	21 	75 	
@95 branch on node 75
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	21 	39 	
@95 branch on node 39
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	21 	38 	
@95 branch on node 38
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	21 	31 	
@95 branch on node 31
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	21 	50 	
@95 branch on node 50
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	21 	36 	
@95 branch on node 36
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	21 	82 	
@95 branch on node 82
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	21 	63 	
@95 branch on node 63
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	21 	97 	
@95 branch on node 97
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	21 	84 	
@95 branch on node 84
@95 prune node: 3 / 3 or (lb 27.000000 >= ub 34.000000)
Attack Pattern: 11 	21 	96 	
@95 branch on node 96
update upper bound from 34.000000 to 33.000000
@95 optimal solution found: ub is 33.000000 and masterbound is 34.000000
nattacks: 3
first attack: 11
@98 masteriteration 5: objective value 34.000000.
@97 Set up Glorie model 5.
Attack Pattern: 8 	10 	17 	
update upper bound from 100000000000000000000.000000 to 36.000000
@95 branch on node 8
Attack Pattern: 8 	10 	17 	
@95 branch on node 10
Attack Pattern: 8 	10 	17 	
@95 branch on node 17
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 36.000000)
Attack Pattern: 8 	10 	61 	
@95 branch on node 61
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 36.000000)
Attack Pattern: 8 	10 	87 	
@95 branch on node 87
update upper bound from 36.000000 to 35.000000
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 35.000000)
Attack Pattern: 8 	10 	96 	
@95 branch on node 96
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 35.000000)
Attack Pattern: 8 	10 	21 	
@95 branch on node 21
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 35.000000)
Attack Pattern: 8 	10 	64 	
@95 branch on node 64
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 35.000000)
Attack Pattern: 8 	10 	39 	
@95 branch on node 39
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 35.000000)
Attack Pattern: 8 	10 	38 	
@95 branch on node 38
update upper bound from 35.000000 to 34.000000
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	31 	
@95 branch on node 31
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	82 	
@95 branch on node 82
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	89 	
@95 branch on node 89
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	32 	
@95 branch on node 32
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	41 	
@95 branch on node 41
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	83 	
@95 branch on node 83
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	94 	
@95 branch on node 94
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	78 	
@95 branch on node 78
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	99 	
@95 branch on node 99
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	12 	
@95 branch on node 12
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	4 	
@95 branch on node 4
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	57 	
@95 branch on node 57
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	92 	
@95 branch on node 92
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	11 	
@95 branch on node 11
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	75 	
@95 branch on node 75
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	85 	
@95 branch on node 85
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	13 	
@95 branch on node 13
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	88 	
@95 branch on node 88
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	67 	
@95 branch on node 67
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	25 	
@95 branch on node 25
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	69 	
@95 branch on node 69
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	70 	
@95 branch on node 70
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	3 	
@95 branch on node 3
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	20 	
@95 branch on node 20
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	98 	
@95 branch on node 98
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	84 	
@95 branch on node 84
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	28 	
@95 branch on node 28
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	0 	
@95 branch on node 0
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	1 	
@95 branch on node 1
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	2 	
@95 branch on node 2
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	5 	
@95 branch on node 5
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	6 	
@95 branch on node 6
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	7 	
@95 branch on node 7
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	9 	
@95 branch on node 9
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	14 	
@95 branch on node 14
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	15 	
@95 branch on node 15
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	16 	
@95 branch on node 16
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	18 	
@95 branch on node 18
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	19 	
@95 branch on node 19
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	22 	
@95 branch on node 22
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	23 	
@95 branch on node 23
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	24 	
@95 branch on node 24
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	26 	
@95 branch on node 26
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	27 	
@95 branch on node 27
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	29 	
@95 branch on node 29
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	30 	
@95 branch on node 30
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	33 	
@95 branch on node 33
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	34 	
@95 branch on node 34
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	35 	
@95 branch on node 35
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	36 	
@95 branch on node 36
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	37 	
@95 branch on node 37
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	40 	
@95 branch on node 40
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	42 	
@95 branch on node 42
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	43 	
@95 branch on node 43
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	44 	
@95 branch on node 44
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	45 	
@95 branch on node 45
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	46 	
@95 branch on node 46
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	47 	
@95 branch on node 47
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	48 	
@95 branch on node 48
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	49 	
@95 branch on node 49
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	50 	
@95 branch on node 50
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	51 	
@95 branch on node 51
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	52 	
@95 branch on node 52
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	53 	
@95 branch on node 53
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	54 	
@95 branch on node 54
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	55 	
@95 branch on node 55
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	56 	
@95 branch on node 56
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	58 	
@95 branch on node 58
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	59 	
@95 branch on node 59
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	60 	
@95 branch on node 60
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	62 	
@95 branch on node 62
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	63 	
@95 branch on node 63
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	65 	
@95 branch on node 65
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	66 	
@95 branch on node 66
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	68 	
@95 branch on node 68
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	71 	
@95 branch on node 71
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	72 	
@95 branch on node 72
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	73 	
@95 branch on node 73
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	74 	
@95 branch on node 74
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	76 	
@95 branch on node 76
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	77 	
@95 branch on node 77
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	79 	
@95 branch on node 79
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	80 	
@95 branch on node 80
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	81 	
@95 branch on node 81
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	86 	
@95 branch on node 86
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	90 	
@95 branch on node 90
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	91 	
@95 branch on node 91
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	93 	
@95 branch on node 93
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	95 	
@95 branch on node 95
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	10 	97 	
@95 branch on node 97
Attack Pattern: 8 	58 	17 	
@95 branch on node 58
Attack Pattern: 8 	58 	17 	
@95 branch on node 17
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	61 	
@95 branch on node 61
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	87 	
@95 branch on node 87
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	96 	
@95 branch on node 96
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	21 	
@95 branch on node 21
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	64 	
@95 branch on node 64
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	39 	
@95 branch on node 39
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	38 	
@95 branch on node 38
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	31 	
@95 branch on node 31
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	82 	
@95 branch on node 82
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	89 	
@95 branch on node 89
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	32 	
@95 branch on node 32
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	41 	
@95 branch on node 41
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	83 	
@95 branch on node 83
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	94 	
@95 branch on node 94
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	78 	
@95 branch on node 78
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	99 	
@95 branch on node 99
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	12 	
@95 branch on node 12
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	4 	
@95 branch on node 4
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	57 	
@95 branch on node 57
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	92 	
@95 branch on node 92
@95 prune node: 3 / 3 or (lb 29.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	11 	
@95 branch on node 11
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	75 	
@95 branch on node 75
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	85 	
@95 branch on node 85
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	13 	
@95 branch on node 13
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	88 	
@95 branch on node 88
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	67 	
@95 branch on node 67
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	25 	
@95 branch on node 25
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	69 	
@95 branch on node 69
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	70 	
@95 branch on node 70
@95 prune node: 3 / 3 or (lb 30.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	3 	
@95 branch on node 3
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	20 	
@95 branch on node 20
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	98 	
@95 branch on node 98
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	84 	
@95 branch on node 84
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	28 	
@95 branch on node 28
@95 prune node: 3 / 3 or (lb 31.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	0 	
@95 branch on node 0
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	1 	
@95 branch on node 1
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	2 	
@95 branch on node 2
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	5 	
@95 branch on node 5
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	6 	
@95 branch on node 6
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	7 	
@95 branch on node 7
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	9 	
@95 branch on node 9
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	14 	
@95 branch on node 14
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	15 	
@95 branch on node 15
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	16 	
@95 branch on node 16
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	18 	
@95 branch on node 18
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	19 	
@95 branch on node 19
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	22 	
@95 branch on node 22
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	23 	
@95 branch on node 23
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	24 	
@95 branch on node 24
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	26 	
@95 branch on node 26
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	27 	
@95 branch on node 27
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	29 	
@95 branch on node 29
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	30 	
@95 branch on node 30
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	33 	
@95 branch on node 33
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	34 	
@95 branch on node 34
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	35 	
@95 branch on node 35
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	36 	
@95 branch on node 36
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	37 	
@95 branch on node 37
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	40 	
@95 branch on node 40
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	42 	
@95 branch on node 42
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	43 	
@95 branch on node 43
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	44 	
@95 branch on node 44
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	45 	
@95 branch on node 45
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	46 	
@95 branch on node 46
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	47 	
@95 branch on node 47
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	48 	
@95 branch on node 48
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	49 	
@95 branch on node 49
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	50 	
@95 branch on node 50
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	51 	
@95 branch on node 51
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	52 	
@95 branch on node 52
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	53 	
@95 branch on node 53
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	54 	
@95 branch on node 54
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	55 	
@95 branch on node 55
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	56 	
@95 branch on node 56
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	59 	
@95 branch on node 59
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	60 	
@95 branch on node 60
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	62 	
@95 branch on node 62
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	63 	
@95 branch on node 63
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	65 	
@95 branch on node 65
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	66 	
@95 branch on node 66
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	68 	
@95 branch on node 68
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	71 	
@95 branch on node 71
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	72 	
@95 branch on node 72
@95 prune node: 3 / 3 or (lb 33.000000 >= ub 34.000000)
Attack Pattern: 8 	58 	73 	
@95 branch on node 73
@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3601.320000 seconds (stage 2: 3178.090000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       3       8      10
[scenario]    1:	       8      10      88
[scenario]    2:	       3      96      69
[scenario]    3:	      11      21      96
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 282183 (282182 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 1389 initial, 1389 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1667235300
-----------------------------
Mon Oct 31 17:55:00 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_7.txt ===========
-----------------------------
Thu Nov 24 11:40:12 CET 2022
-----------------------------
@03 1669286412
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_7.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_7.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 156324

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 3235101
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	2.65
Create the model
Time to create master model:	7.3
Solve the model
@99 Start master loop of trilevel optimization algorithm.
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 6381.170000 seconds (stage 2: 0.000000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 3391526 (3391525 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669292801
-----------------------------
Thu Nov 24 13:26:41 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_8.txt ===========
-----------------------------
Thu Nov 24 11:40:24 CET 2022
-----------------------------
@03 1669286424
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_8.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_8.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 68251

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 2456639
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	1.72
Create the model
Time to create master model:	5.15
Solve the model
@99 Start master loop of trilevel optimization algorithm.
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3620.640000 seconds (stage 2: 0.000000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2524991 (2524990 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290049
-----------------------------
Thu Nov 24 12:40:49 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_9.txt ===========
-----------------------------
Thu Nov 24 11:40:31 CET 2022
-----------------------------
@03 1669286431
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_9.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_9.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 129024

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 6930447
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	5.31
Create the model
Time to create master model:	15.11
Solve the model
@99 Start master loop of trilevel optimization algorithm.
memory limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 168.550000 seconds (stage 2: 0.000000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 7059572 (7059571 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669286608
-----------------------------
Thu Nov 24 11:43:28 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_10.txt ===========
-----------------------------
Thu Nov 24 11:40:36 CET 2022
-----------------------------
@03 1669286436
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_10.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_10.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 66143

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 2878692
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	2.19
Create the model
Time to create master model:	6.55
Solve the model
@99 Start master loop of trilevel optimization algorithm.
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 5734.830000 seconds (stage 2: 0.000000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2944936 (2944935 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669292178
-----------------------------
Thu Nov 24 13:16:18 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_11.txt ===========
-----------------------------
Thu Nov 24 11:40:51 CET 2022
-----------------------------
@03 1669286451
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_11.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_11.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 52645

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 680436
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.56
Create the model
Time to create master model:	1.64
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 61.000000.
@97 Set up Glorie model 1.
Attack Pattern: 4 	5 	6 	
update upper bound from 100000000000000000000.000000 to 56.000000
@95 optimal solution found: ub is 56.000000 and masterbound is 61.000000
nattacks: 3
first attack: 4
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3997.830000 seconds (stage 2: 77.540000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       4       5       6
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1466362 (1466361 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 500 initial, 500 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290453
-----------------------------
Thu Nov 24 12:47:33 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_12.txt ===========
-----------------------------
Thu Nov 24 11:40:51 CET 2022
-----------------------------
@03 1669286451
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_12.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_12.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 34167

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1184510
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.87
Create the model
Time to create master model:	2.46
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 66.000000.
@97 Set up Glorie model 1.
Attack Pattern: 0 	2 	5 	
update upper bound from 100000000000000000000.000000 to 59.000000
@95 optimal solution found: ub is 59.000000 and masterbound is 66.000000
nattacks: 3
first attack: 0
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3612.090000 seconds (stage 2: 847.420000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       0       2       5
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2437550 (2437549 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 492 initial, 492 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290067
-----------------------------
Thu Nov 24 12:41:07 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_13.txt ===========
-----------------------------
Thu Nov 24 11:41:04 CET 2022
-----------------------------
@03 1669286464
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_13.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_13.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 76579

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 886289
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.72
Create the model
Time to create master model:	1.76
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 58.000000.
@97 Set up Glorie model 1.
Attack Pattern: 0 	1 	2 	
update upper bound from 100000000000000000000.000000 to 54.000000
@95 optimal solution found: ub is 54.000000 and masterbound is 58.000000
nattacks: 3
first attack: 0
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3609.970000 seconds (stage 2: 408.060000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       0       1       2
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1925936 (1925935 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 500 initial, 500 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290077
-----------------------------
Thu Nov 24 12:41:17 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_14.txt ===========
-----------------------------
Thu Nov 24 11:41:09 CET 2022
-----------------------------
@03 1669286469
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_14.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_14.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 18129

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1055222
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.76
Create the model
Time to create master model:	2.19
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 50.000000.
@97 Set up Glorie model 1.
Attack Pattern: 12 	22 	24 	
update upper bound from 100000000000000000000.000000 to 47.000000
@95 optimal solution found: ub is 47.000000 and masterbound is 50.000000
nattacks: 3
first attack: 12
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3613.570000 seconds (stage 2: 738.800000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	      12      22      24
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2146898 (2146897 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 492 initial, 492 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290086
-----------------------------
Thu Nov 24 12:41:26 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_15.txt ===========
-----------------------------
Thu Nov 24 11:41:36 CET 2022
-----------------------------
@03 1669286496
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_15.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_15.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 21628

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1098176
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.79
Create the model
Time to create master model:	2.39
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 59.000000.
@97 Set up Glorie model 1.
Attack Pattern: 0 	5 	10 	
update upper bound from 100000000000000000000.000000 to 56.000000
@95 optimal solution found: ub is 56.000000 and masterbound is 59.000000
nattacks: 3
first attack: 0
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3621.410000 seconds (stage 2: 1558.690000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       0       5      10
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2239804 (2239803 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 492 initial, 492 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290122
-----------------------------
Thu Nov 24 12:42:02 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_16.txt ===========
-----------------------------
Thu Nov 24 11:41:46 CET 2022
-----------------------------
@03 1669286506
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_16.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_16.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 37344

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 826521
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.6
Create the model
Time to create master model:	1.73
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 50.000000.
@97 Set up Glorie model 1.
Attack Pattern: 3 	9 	12 	
update upper bound from 100000000000000000000.000000 to 46.000000
@95 optimal solution found: ub is 46.000000 and masterbound is 50.000000
nattacks: 3
first attack: 3
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3609.470000 seconds (stage 2: 226.970000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       3       9      12
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1727928 (1727927 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 496 initial, 496 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290119
-----------------------------
Thu Nov 24 12:41:59 CET 2022
-----------------------------

=ready=
Linux mcs-computeA008 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_17.txt ===========
-----------------------------
Mon Oct 31 16:56:28 CET 2022
-----------------------------
@03 1667231788
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_17.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_17.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 21030

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 118522
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.07
Create the model
Time to create master model:	0.23
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 44.000000.
@97 Set up Glorie model 1.
Attack Pattern: 1 	2 	3 	
update upper bound from 100000000000000000000.000000 to 41.000000
@95 optimal solution found: ub is 41.000000 and masterbound is 44.000000
nattacks: 3
first attack: 1
@98 masteriteration 2: objective value 42.000000.
@97 Set up Glorie model 2.
Attack Pattern: 18 	19 	20 	
update upper bound from 100000000000000000000.000000 to 39.000000
@95 optimal solution found: ub is 39.000000 and masterbound is 42.000000
nattacks: 3
first attack: 18
@98 masteriteration 3: objective value 41.000000.
@97 Set up Glorie model 3.
Attack Pattern: 0 	3 	5 	
update upper bound from 100000000000000000000.000000 to 39.000000
@95 optimal solution found: ub is 39.000000 and masterbound is 41.000000
nattacks: 3
first attack: 0
@98 masteriteration 4: objective value 40.000000.
@97 Set up Glorie model 4.
Attack Pattern: 0 	13 	14 	
update upper bound from 100000000000000000000.000000 to 38.000000
@95 optimal solution found: ub is 38.000000 and masterbound is 40.000000
nattacks: 3
first attack: 0
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3603.720000 seconds (stage 2: 105.160000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       1       2       3
[scenario]    1:	      18      19      20
[scenario]    2:	       0       3       5
[scenario]    3:	       0      13      14
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 698253 (698252 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 1389 initial, 1389 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1667235394
-----------------------------
Mon Oct 31 17:56:34 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_18.txt ===========
-----------------------------
Thu Nov 24 11:41:51 CET 2022
-----------------------------
@03 1669286511
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_18.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_18.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 20661

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1262551
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.92
Create the model
Time to create master model:	2.67
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 61.000000.
@97 Set up Glorie model 1.
Attack Pattern: 2 	3 	22 	
@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3765.940000 seconds (stage 2: 512.850000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1283313 (1283312 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290282
-----------------------------
Thu Nov 24 12:44:42 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_19.txt ===========
-----------------------------
Thu Nov 24 11:41:52 CET 2022
-----------------------------
@03 1669286512
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_19.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_19.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 77016

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1248490
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.95
Create the model
Time to create master model:	2.76
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 52.000000.
@97 Set up Glorie model 1.
Attack Pattern: 1 	2 	5 	
update upper bound from 100000000000000000000.000000 to 49.000000
@95 optimal solution found: ub is 49.000000 and masterbound is 52.000000
nattacks: 3
first attack: 1
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3830.410000 seconds (stage 2: 595.830000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       1       2       5
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2651210 (2651209 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 496 initial, 496 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290348
-----------------------------
Thu Nov 24 12:45:48 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_20.txt ===========
-----------------------------
Thu Nov 24 11:42:39 CET 2022
-----------------------------
@03 1669286559
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_20.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_20.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 44954

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1134941
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.86
Create the model
Time to create master model:	2.12
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 54.000000.
@97 Set up Glorie model 1.
Attack Pattern: 1 	2 	4 	
update upper bound from 100000000000000000000.000000 to 51.000000
@95 optimal solution found: ub is 51.000000 and masterbound is 54.000000
nattacks: 3
first attack: 1
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3973.960000 seconds (stage 2: 851.240000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       1       2       4
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2359988 (2359987 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 496 initial, 496 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290536
-----------------------------
Thu Nov 24 12:48:56 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_21.txt ===========
-----------------------------
Thu Nov 24 11:42:39 CET 2022
-----------------------------
@03 1669286559
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_21.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_21.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 33610

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 799806
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.63
Create the model
Time to create master model:	1.49
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 55.000000.
@97 Set up Glorie model 1.
Attack Pattern: 0 	5 	11 	
update upper bound from 100000000000000000000.000000 to 50.000000
@95 optimal solution found: ub is 50.000000 and masterbound is 55.000000
nattacks: 3
first attack: 0
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3932.200000 seconds (stage 2: 264.640000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       0       5      11
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1667027 (1667026 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 490 initial, 490 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290494
-----------------------------
Thu Nov 24 12:48:14 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_22.txt ===========
-----------------------------
Thu Nov 24 11:43:29 CET 2022
-----------------------------
@03 1669286609
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_22.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_22.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 40002

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1327392
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	1.01
Create the model
Time to create master model:	2.72
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 56.000000.
@97 Set up Glorie model 1.
Attack Pattern: 0 	38 	53 	
update upper bound from 100000000000000000000.000000 to 52.000000
@95 optimal solution found: ub is 52.000000 and masterbound is 56.000000
nattacks: 3
first attack: 0
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3698.210000 seconds (stage 2: 436.180000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       0      38      53
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2734983 (2734982 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 490 initial, 490 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290313
-----------------------------
Thu Nov 24 12:45:13 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_23.txt ===========
-----------------------------
Thu Nov 24 11:43:45 CET 2022
-----------------------------
@03 1669286625
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_23.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_23.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 48125

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 313185
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.25
Create the model
Time to create master model:	0.69
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 59.000000.
@97 Set up Glorie model 1.
Attack Pattern: 2 	3 	4 	
update upper bound from 100000000000000000000.000000 to 55.000000
@95 optimal solution found: ub is 55.000000 and masterbound is 59.000000
nattacks: 3
first attack: 2
@98 masteriteration 2: objective value 55.000000.
@97 Set up Glorie model 2.
Attack Pattern: 0 	2 	3 	
update upper bound from 100000000000000000000.000000 to 55.000000
@95 branch on node 0
Attack Pattern: 0 	2 	3 	
@95 branch on node 2
Attack Pattern: 0 	2 	3 	
@95 branch on node 3
@95 prune node: 3 / 3 or (lb 46.000000 >= ub 55.000000)
Attack Pattern: 0 	2 	39 	
@95 branch on node 39
@95 prune node: 3 / 3 or (lb 46.000000 >= ub 55.000000)
Attack Pattern: 0 	2 	24 	
@95 branch on node 24
@95 prune node: 3 / 3 or (lb 46.000000 >= ub 55.000000)
Attack Pattern: 0 	2 	20 	
@95 branch on node 20
@95 prune node: 3 / 3 or (lb 46.000000 >= ub 55.000000)
Attack Pattern: 0 	2 	4 	
@95 branch on node 4
update upper bound from 55.000000 to 54.000000
@95 optimal solution found: ub is 54.000000 and masterbound is 55.000000
nattacks: 3
first attack: 0
@98 masteriteration 3: objective value 54.000000.
@97 Set up Glorie model 3.
Attack Pattern: 2 	4 	6 	
update upper bound from 100000000000000000000.000000 to 54.000000
@95 branch on node 2
Attack Pattern: 2 	4 	6 	
@95 branch on node 4
Attack Pattern: 2 	4 	6 	
@95 branch on node 6
@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3619.050000 seconds (stage 2: 1067.840000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       2       3       4
[scenario]    1:	       0       2       4
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1084227 (1084226 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 795 initial, 795 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290248
-----------------------------
Thu Nov 24 12:44:08 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_24.txt ===========
-----------------------------
Thu Nov 24 11:44:13 CET 2022
-----------------------------
@03 1669286653
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_24.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_24.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 50373

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1031586
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.81
Create the model
Time to create master model:	2.34
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 49.000000.
@97 Set up Glorie model 1.
Attack Pattern: 2 	3 	16 	
update upper bound from 100000000000000000000.000000 to 44.000000
@95 optimal solution found: ub is 44.000000 and masterbound is 49.000000
nattacks: 3
first attack: 2
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3610.480000 seconds (stage 2: 487.570000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       2       3      16
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2164114 (2164113 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 492 initial, 492 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290268
-----------------------------
Thu Nov 24 12:44:28 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_25.txt ===========
-----------------------------
Thu Nov 24 11:45:03 CET 2022
-----------------------------
@03 1669286703
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_25.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_25.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 49425

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 796797
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.62
Create the model
Time to create master model:	2.05
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 48.000000.
@97 Set up Glorie model 1.
Attack Pattern: 9 	13 	26 	
update upper bound from 100000000000000000000.000000 to 45.000000
@95 optimal solution found: ub is 45.000000 and masterbound is 48.000000
nattacks: 3
first attack: 9
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3974.790000 seconds (stage 2: 205.570000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       9      13      26
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1692643 (1692642 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 498 initial, 498 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290681
-----------------------------
Thu Nov 24 12:51:21 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_26.txt ===========
-----------------------------
Thu Nov 24 11:45:15 CET 2022
-----------------------------
@03 1669286715
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_26.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_26.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 51796

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1953320
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	1.33
Create the model
Time to create master model:	5.21
Solve the model
@99 Start master loop of trilevel optimization algorithm.
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3619.890000 seconds (stage 2: 0.000000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2005217 (2005216 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290338
-----------------------------
Thu Nov 24 12:45:38 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_27.txt ===========
-----------------------------
Thu Nov 24 11:45:46 CET 2022
-----------------------------
@03 1669286746
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_27.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_27.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 29170

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 993213
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.72
Create the model
Time to create master model:	2
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 49.000000.
@97 Set up Glorie model 1.
Attack Pattern: 2 	4 	11 	
update upper bound from 100000000000000000000.000000 to 45.000000
@95 optimal solution found: ub is 45.000000 and masterbound is 49.000000
nattacks: 3
first attack: 2
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3699.550000 seconds (stage 2: 981.250000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       2       4      11
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2044963 (2044962 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 494 initial, 494 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290450
-----------------------------
Thu Nov 24 12:47:30 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_28.txt ===========
-----------------------------
Thu Nov 24 11:46:06 CET 2022
-----------------------------
@03 1669286766
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_28.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_28.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 62554

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1312427
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	1.06
Create the model
Time to create master model:	3.16
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 66.000000.
@97 Set up Glorie model 1.
Attack Pattern: 3 	6 	7 	
update upper bound from 100000000000000000000.000000 to 59.000000
@95 optimal solution found: ub is 59.000000 and masterbound is 66.000000
nattacks: 3
first attack: 3
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3613.110000 seconds (stage 2: 936.040000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       3       6       7
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2750159 (2750158 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 494 initial, 494 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290385
-----------------------------
Thu Nov 24 12:46:25 CET 2022
-----------------------------

=ready=
Linux mcs-computeA005 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_29.txt ===========
-----------------------------
Thu Nov 24 11:46:56 CET 2022
-----------------------------
@03 1669286816
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_29.txt 3 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_29.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 50745

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 993256
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.82
Create the model
Time to create master model:	2.33
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 58.000000.
@97 Set up Glorie model 1.
Attack Pattern: 3 	5 	13 	
update upper bound from 100000000000000000000.000000 to 53.000000
@95 optimal solution found: ub is 53.000000 and masterbound is 58.000000
nattacks: 3
first attack: 3
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3611.070000 seconds (stage 2: 760.580000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       3       5      13
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2088200 (2088199 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 496 initial, 496 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290431
-----------------------------
Thu Nov 24 12:47:11 CET 2022
-----------------------------

=ready=
