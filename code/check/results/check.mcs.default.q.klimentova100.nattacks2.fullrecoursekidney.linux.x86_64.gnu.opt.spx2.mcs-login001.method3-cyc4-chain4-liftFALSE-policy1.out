
Linux mcs-computeA009 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_0.txt ===========
-----------------------------
Thu Nov 24 11:38:26 CET 2022
-----------------------------
@03 1669286306
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_0.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_0.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 16463

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 415257
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.41
Create the model
Time to create master model:	1.17
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 43.000000.
@97 Set up Glorie model 1.
Attack Pattern: 3 	4 	
update upper bound from 100000000000000000000.000000 to 40.000000
@95 optimal solution found: ub is 40.000000 and masterbound is 43.000000
nattacks: 2
first attack: 3
@98 masteriteration 2: objective value 41.000000.
@97 Set up Glorie model 2.
Attack Pattern: 4 	9 	
update upper bound from 100000000000000000000.000000 to 41.000000
@95 branch on node 4
Attack Pattern: 4 	9 	
@95 branch on node 9
@95 prune node: 2 / 2 or (lb 35.000000 >= ub 41.000000)
Attack Pattern: 4 	14 	
@95 branch on node 14
@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3619.850000 seconds (stage 2: 634.120000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       3       4
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 863638 (863637 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 496 initial, 496 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289933
-----------------------------
Thu Nov 24 12:38:53 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_1.txt ===========
-----------------------------
Thu Nov 24 11:38:26 CET 2022
-----------------------------
@03 1669286306
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_1.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_1.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 12889

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1144552
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.73
Create the model
Time to create master model:	2.23
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 47.000000.
@97 Set up Glorie model 1.
Attack Pattern: 2 	3 	
@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3629.080000 seconds (stage 2: 2199.920000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1157542 (1157541 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289937
-----------------------------
Thu Nov 24 12:38:57 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_2.txt ===========
-----------------------------
Thu Nov 24 11:38:26 CET 2022
-----------------------------
@03 1669286306
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_2.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_2.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 37929

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 111945
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.1
Create the model
Time to create master model:	0.24
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 48.000000.
@97 Set up Glorie model 1.
Attack Pattern: 18 	34 	
update upper bound from 100000000000000000000.000000 to 46.000000
@95 optimal solution found: ub is 46.000000 and masterbound is 48.000000
nattacks: 2
first attack: 18
@98 masteriteration 2: objective value 47.000000.
@97 Set up Glorie model 2.
Attack Pattern: 2 	5 	
update upper bound from 100000000000000000000.000000 to 45.000000
@95 optimal solution found: ub is 45.000000 and masterbound is 47.000000
nattacks: 2
first attack: 2
@98 masteriteration 3: objective value 46.000000.
@97 Set up Glorie model 3.
Attack Pattern: 0 	1 	
update upper bound from 100000000000000000000.000000 to 46.000000
@95 branch on node 0
Attack Pattern: 0 	1 	
@95 branch on node 1
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 46.000000)
Attack Pattern: 0 	85 	
@95 branch on node 85
update upper bound from 46.000000 to 45.000000
@95 optimal solution found: ub is 45.000000 and masterbound is 46.000000
nattacks: 2
first attack: 0
@98 masteriteration 4: objective value 45.000000.
@97 Set up Glorie model 4.
Attack Pattern: 0 	2 	
update upper bound from 100000000000000000000.000000 to 43.000000
@95 optimal solution found: ub is 43.000000 and masterbound is 45.000000
nattacks: 2
first attack: 0
@98 masteriteration 5: objective value 44.000000.
@97 Set up Glorie model 5.
Attack Pattern: 0 	1 	
update upper bound from 100000000000000000000.000000 to 46.000000
@95 branch on node 0
Attack Pattern: 0 	1 	
@95 branch on node 1
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 46.000000)
Attack Pattern: 0 	27 	
@95 branch on node 27
update upper bound from 46.000000 to 44.000000
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	11 	
@95 branch on node 11
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	84 	
@95 branch on node 84
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	2 	
@95 branch on node 2
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	17 	
@95 branch on node 17
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	12 	
@95 branch on node 12
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	96 	
@95 branch on node 96
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	5 	
@95 branch on node 5
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	22 	
@95 branch on node 22
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	62 	
@95 branch on node 62
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	89 	
@95 branch on node 89
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	8 	
@95 branch on node 8
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	34 	
@95 branch on node 34
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	41 	
@95 branch on node 41
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	97 	
@95 branch on node 97
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	10 	
@95 branch on node 10
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	20 	
@95 branch on node 20
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	16 	
@95 branch on node 16
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	24 	
@95 branch on node 24
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	13 	
@95 branch on node 13
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	54 	
@95 branch on node 54
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	74 	
@95 branch on node 74
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	35 	
@95 branch on node 35
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	23 	
@95 branch on node 23
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	42 	
@95 branch on node 42
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	52 	
@95 branch on node 52
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	90 	
@95 branch on node 90
update upper bound from 44.000000 to 43.000000
@95 optimal solution found: ub is 43.000000 and masterbound is 44.000000
nattacks: 2
first attack: 0
@98 masteriteration 6: objective value 43.000000.
@97 Set up Glorie model 6.
Attack Pattern: 0 	2 	
update upper bound from 100000000000000000000.000000 to 44.000000
@95 branch on node 0
Attack Pattern: 0 	2 	
@95 branch on node 2
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	5 	
@95 branch on node 5
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	27 	
@95 branch on node 27
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	96 	
@95 branch on node 96
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	9 	
@95 branch on node 9
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	15 	
@95 branch on node 15
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 44.000000)
Attack Pattern: 0 	90 	
@95 branch on node 90
update upper bound from 44.000000 to 43.000000
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	84 	
@95 branch on node 84
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	12 	
@95 branch on node 12
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	47 	
@95 branch on node 47
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	66 	
@95 branch on node 66
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	44 	
@95 branch on node 44
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	23 	
@95 branch on node 23
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	42 	
@95 branch on node 42
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	24 	
@95 branch on node 24
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	35 	
@95 branch on node 35
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	38 	
@95 branch on node 38
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	54 	
@95 branch on node 54
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	74 	
@95 branch on node 74
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	55 	
@95 branch on node 55
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	51 	
@95 branch on node 51
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	62 	
@95 branch on node 62
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	82 	
@95 branch on node 82
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	81 	
@95 branch on node 81
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	70 	
@95 branch on node 70
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	95 	
@95 branch on node 95
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	97 	
@95 branch on node 97
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	72 	
@95 branch on node 72
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	99 	
@95 branch on node 99
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	22 	
@95 branch on node 22
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	11 	
@95 branch on node 11
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	16 	
@95 branch on node 16
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	52 	
@95 branch on node 52
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 0 	1 	
@95 branch on node 1
@95 prune node: 2 / 2 or (lb 41.000000 >= ub 43.000000)
Attack Pattern: 0 	89 	
@95 branch on node 89
@95 prune node: 2 / 2 or (lb 41.000000 >= ub 43.000000)
Attack Pattern: 0 	17 	
@95 branch on node 17
@95 prune node: 2 / 2 or (lb 41.000000 >= ub 43.000000)
Attack Pattern: 0 	10 	
@95 branch on node 10
@95 prune node: 2 / 2 or (lb 41.000000 >= ub 43.000000)
Attack Pattern: 0 	20 	
@95 branch on node 20
@95 prune node: 2 / 2 or (lb 41.000000 >= ub 43.000000)
Attack Pattern: 0 	13 	
@95 branch on node 13
@95 prune node: 2 / 2 or (lb 41.000000 >= ub 43.000000)
Attack Pattern: 0 	31 	
@95 branch on node 31
@95 prune node: 2 / 2 or (lb 41.000000 >= ub 43.000000)
Attack Pattern: 0 	98 	
@95 branch on node 98
@95 prune node: 2 / 2 or (lb 41.000000 >= ub 43.000000)
Attack Pattern: 0 	68 	
@95 branch on node 68
@95 prune node: 2 / 2 or (lb 41.000000 >= ub 43.000000)
Attack Pattern: 0 	41 	
@95 branch on node 41
@95 prune node: 2 / 2 or (lb 41.000000 >= ub 43.000000)
Attack Pattern: 0 	85 	
@95 branch on node 85
@95 prune node: 2 / 2 or (lb 41.000000 >= ub 43.000000)
Attack Pattern: 0 	53 	
@95 branch on node 53
@95 prune node: 2 / 2 or (lb 41.000000 >= ub 43.000000)
Attack Pattern: 0 	3 	
@95 prune node: 1 / 2 or (lb 44.000000 >= ub 43.000000)
Attack Pattern: 8 	2 	
@95 branch on node 8
Attack Pattern: 8 	2 	
@95 branch on node 2
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 8 	5 	
@95 branch on node 5
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 8 	27 	
@95 branch on node 27
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 8 	96 	
@95 branch on node 96
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 8 	9 	
@95 branch on node 9
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 8 	15 	
@95 branch on node 15
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 8 	90 	
@95 branch on node 90
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 8 	84 	
@95 branch on node 84
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 8 	12 	
@95 branch on node 12
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 8 	47 	
@95 branch on node 47
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 8 	66 	
@95 branch on node 66
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 8 	44 	
@95 branch on node 44
@95 prune node: 2 / 2 or (lb 40.000000 >= ub 43.000000)
Attack Pattern: 8 	23 	
@95 branch on node 23
@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3606.970000 seconds (stage 2: 1700.540000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	      18      34
[scenario]    1:	       2       5
[scenario]    2:	       0      85
[scenario]    3:	       0       2
[scenario]    4:	       0      90
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 899840 (899839 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 1696 initial, 1696 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289915
-----------------------------
Thu Nov 24 12:38:35 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_3.txt ===========
-----------------------------
Thu Nov 24 11:38:27 CET 2022
-----------------------------
@03 1669286307
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_3.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_3.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 26165

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1528644
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.98
Create the model
Time to create master model:	2.88
Solve the model
@99 Start master loop of trilevel optimization algorithm.
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3608.790000 seconds (stage 2: 0.000000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1554910 (1554909 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289918
-----------------------------
Thu Nov 24 12:38:38 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_4.txt ===========
-----------------------------
Thu Nov 24 11:38:27 CET 2022
-----------------------------
@03 1669286307
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_4.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_4.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 26420

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 935073
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.61
Create the model
Time to create master model:	1.92
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 62.000000.
@97 Set up Glorie model 1.
Attack Pattern: 2 	4 	
update upper bound from 100000000000000000000.000000 to 58.000000
@95 optimal solution found: ub is 58.000000 and masterbound is 62.000000
nattacks: 2
first attack: 2
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3809.780000 seconds (stage 2: 532.960000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       2       4
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1923183 (1923182 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 494 initial, 494 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290120
-----------------------------
Thu Nov 24 12:42:00 CET 2022
-----------------------------

=ready=
Linux mcs-computeA010 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_5.txt ===========
-----------------------------
Thu Nov 24 11:38:27 CET 2022
-----------------------------
@03 1669286307
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_5.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_5.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 17405

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 677587
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.65
Create the model
Time to create master model:	1.81
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 39.000000.
@97 Set up Glorie model 1.
Attack Pattern: 6 	14 	
update upper bound from 100000000000000000000.000000 to 35.000000
@95 optimal solution found: ub is 35.000000 and masterbound is 39.000000
nattacks: 2
first attack: 6
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3987.960000 seconds (stage 2: 107.290000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       6      14
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1390182 (1390181 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 496 initial, 496 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290303
-----------------------------
Thu Nov 24 12:45:03 CET 2022
-----------------------------

=ready=
Linux mcs-computeA001 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_6.txt ===========
-----------------------------
Sun Oct 30 01:23:33 CEST 2022
-----------------------------
@03 1667085813
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_6.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_6.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 6558

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 49780
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.03
Create the model
Time to create master model:	0.05
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 41.000000.
@97 Set up Glorie model 1.
Attack Pattern: 3 	8 	
update upper bound from 100000000000000000000.000000 to 38.000000
@95 optimal solution found: ub is 38.000000 and masterbound is 41.000000
nattacks: 2
first attack: 3
@98 masteriteration 2: objective value 39.000000.
@97 Set up Glorie model 2.
Attack Pattern: 11 	13 	
update upper bound from 100000000000000000000.000000 to 37.000000
@95 optimal solution found: ub is 37.000000 and masterbound is 39.000000
nattacks: 2
first attack: 11
@98 masteriteration 3: objective value 39.000000.
@97 Set up Glorie model 3.
Attack Pattern: 3 	10 	
update upper bound from 100000000000000000000.000000 to 37.000000
@95 optimal solution found: ub is 37.000000 and masterbound is 39.000000
nattacks: 2
first attack: 3
@98 masteriteration 4: objective value 38.000000.
@97 Set up Glorie model 4.
Attack Pattern: 3 	10 	
update upper bound from 100000000000000000000.000000 to 38.000000
@95 branch on node 3
Attack Pattern: 3 	10 	
@95 branch on node 10
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	67 	
@95 branch on node 67
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	20 	
@95 branch on node 20
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	86 	
@95 branch on node 86
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	13 	
@95 branch on node 13
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	88 	
@95 branch on node 88
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	83 	
@95 branch on node 83
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	94 	
@95 branch on node 94
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	19 	
@95 branch on node 19
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	61 	
@95 branch on node 61
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	85 	
@95 branch on node 85
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	96 	
@95 branch on node 96
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	21 	
@95 branch on node 21
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	64 	
@95 branch on node 64
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	39 	
@95 branch on node 39
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	38 	
@95 branch on node 38
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	22 	
@95 branch on node 22
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	84 	
@95 branch on node 84
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	36 	
@95 branch on node 36
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	32 	
@95 branch on node 32
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	31 	
@95 branch on node 31
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	50 	
@95 branch on node 50
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	89 	
@95 branch on node 89
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	82 	
@95 branch on node 82
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	99 	
@95 branch on node 99
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	87 	
@95 branch on node 87
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	11 	
@95 branch on node 11
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	8 	
@95 branch on node 8
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	28 	
@95 branch on node 28
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	4 	
@95 branch on node 4
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 38.000000)
Attack Pattern: 3 	57 	
@95 branch on node 57
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 38.000000)
Attack Pattern: 3 	12 	
@95 branch on node 12
update upper bound from 38.000000 to 37.000000
@95 optimal solution found: ub is 37.000000 and masterbound is 38.000000
nattacks: 2
first attack: 3
@98 masteriteration 5: objective value 37.000000.
@97 Set up Glorie model 5.
Attack Pattern: 3 	17 	
update upper bound from 100000000000000000000.000000 to 39.000000
@95 branch on node 3
Attack Pattern: 3 	17 	
@95 branch on node 17
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 39.000000)
Attack Pattern: 3 	61 	
@95 branch on node 61
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 39.000000)
Attack Pattern: 3 	84 	
@95 branch on node 84
update upper bound from 39.000000 to 38.000000
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	96 	
@95 branch on node 96
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	21 	
@95 branch on node 21
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	64 	
@95 branch on node 64
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	39 	
@95 branch on node 39
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	38 	
@95 branch on node 38
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	36 	
@95 branch on node 36
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	40 	
@95 branch on node 40
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	97 	
@95 branch on node 97
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	82 	
@95 branch on node 82
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	41 	
@95 branch on node 41
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	83 	
@95 branch on node 83
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	94 	
@95 branch on node 94
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	78 	
@95 branch on node 78
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	99 	
@95 branch on node 99
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	87 	
@95 branch on node 87
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	31 	
@95 branch on node 31
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	85 	
@95 branch on node 85
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	28 	
@95 branch on node 28
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 38.000000)
Attack Pattern: 3 	12 	
@95 branch on node 12
update upper bound from 38.000000 to 37.000000
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 3 	63 	
@95 branch on node 63
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 3 	57 	
@95 branch on node 57
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 3 	13 	
@95 branch on node 13
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 3 	88 	
@95 branch on node 88
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 3 	67 	
@95 branch on node 67
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 3 	22 	
@95 branch on node 22
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 3 	75 	
@95 branch on node 75
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 3 	32 	
@95 branch on node 32
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 3 	46 	
@95 branch on node 46
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 3 	69 	
@95 branch on node 69
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 3 	70 	
@95 branch on node 70
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 3 	8 	
@95 branch on node 8
@95 prune node: 2 / 2 or (lb 35.000000 >= ub 37.000000)
Attack Pattern: 3 	11 	
@95 branch on node 11
@95 prune node: 2 / 2 or (lb 35.000000 >= ub 37.000000)
Attack Pattern: 3 	50 	
@95 branch on node 50
@95 prune node: 2 / 2 or (lb 35.000000 >= ub 37.000000)
Attack Pattern: 3 	89 	
@95 branch on node 89
@95 prune node: 2 / 2 or (lb 35.000000 >= ub 37.000000)
Attack Pattern: 3 	98 	
@95 branch on node 98
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 3 	92 	
@95 branch on node 92
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 3 	0 	
@95 prune node: 1 / 2 or (lb 37.000000 >= ub 37.000000)
Attack Pattern: 20 	17 	
@95 branch on node 20
Attack Pattern: 20 	17 	
@95 branch on node 17
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	61 	
@95 branch on node 61
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	84 	
@95 branch on node 84
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	96 	
@95 branch on node 96
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	21 	
@95 branch on node 21
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	64 	
@95 branch on node 64
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	39 	
@95 branch on node 39
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	38 	
@95 branch on node 38
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	36 	
@95 branch on node 36
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	40 	
@95 branch on node 40
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	97 	
@95 branch on node 97
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	82 	
@95 branch on node 82
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	41 	
@95 branch on node 41
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	83 	
@95 branch on node 83
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	94 	
@95 branch on node 94
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	78 	
@95 branch on node 78
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	99 	
@95 branch on node 99
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	87 	
@95 branch on node 87
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	31 	
@95 branch on node 31
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	85 	
@95 branch on node 85
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	28 	
@95 branch on node 28
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 20 	12 	
@95 branch on node 12
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 20 	63 	
@95 branch on node 63
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 20 	57 	
@95 branch on node 57
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 20 	13 	
@95 branch on node 13
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 20 	88 	
@95 branch on node 88
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 20 	67 	
@95 branch on node 67
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 20 	22 	
@95 branch on node 22
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 20 	75 	
@95 branch on node 75
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 20 	32 	
@95 branch on node 32
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 20 	46 	
@95 branch on node 46
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 20 	69 	
@95 branch on node 69
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 20 	70 	
@95 branch on node 70
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 20 	8 	
@95 branch on node 8
@95 prune node: 2 / 2 or (lb 35.000000 >= ub 37.000000)
Attack Pattern: 20 	11 	
@95 branch on node 11
@95 prune node: 2 / 2 or (lb 35.000000 >= ub 37.000000)
Attack Pattern: 20 	50 	
@95 branch on node 50
@95 prune node: 2 / 2 or (lb 35.000000 >= ub 37.000000)
Attack Pattern: 20 	89 	
@95 branch on node 89
@95 prune node: 2 / 2 or (lb 35.000000 >= ub 37.000000)
Attack Pattern: 20 	98 	
@95 branch on node 98
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 20 	92 	
@95 branch on node 92
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 20 	0 	
@95 prune node: 1 / 2 or (lb 37.000000 >= ub 37.000000)
Attack Pattern: 86 	17 	
@95 branch on node 86
Attack Pattern: 86 	17 	
@95 branch on node 17
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	61 	
@95 branch on node 61
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	84 	
@95 branch on node 84
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	96 	
@95 branch on node 96
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	21 	
@95 branch on node 21
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	64 	
@95 branch on node 64
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	39 	
@95 branch on node 39
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	38 	
@95 branch on node 38
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	36 	
@95 branch on node 36
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	40 	
@95 branch on node 40
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	97 	
@95 branch on node 97
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	82 	
@95 branch on node 82
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	41 	
@95 branch on node 41
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	83 	
@95 branch on node 83
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	94 	
@95 branch on node 94
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	78 	
@95 branch on node 78
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	99 	
@95 branch on node 99
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	87 	
@95 branch on node 87
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	31 	
@95 branch on node 31
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	85 	
@95 branch on node 85
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	28 	
@95 branch on node 28
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 86 	12 	
@95 branch on node 12
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 86 	63 	
@95 branch on node 63
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 86 	57 	
@95 branch on node 57
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 86 	13 	
@95 branch on node 13
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 86 	88 	
@95 branch on node 88
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 86 	67 	
@95 branch on node 67
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 86 	22 	
@95 branch on node 22
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 86 	75 	
@95 branch on node 75
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 86 	32 	
@95 branch on node 32
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 86 	46 	
@95 branch on node 46
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 86 	69 	
@95 branch on node 69
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 86 	70 	
@95 branch on node 70
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 86 	8 	
@95 branch on node 8
@95 prune node: 2 / 2 or (lb 35.000000 >= ub 37.000000)
Attack Pattern: 86 	11 	
@95 branch on node 11
@95 prune node: 2 / 2 or (lb 35.000000 >= ub 37.000000)
Attack Pattern: 86 	50 	
@95 branch on node 50
@95 prune node: 2 / 2 or (lb 35.000000 >= ub 37.000000)
Attack Pattern: 86 	89 	
@95 branch on node 89
@95 prune node: 2 / 2 or (lb 35.000000 >= ub 37.000000)
Attack Pattern: 86 	98 	
@95 branch on node 98
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 86 	92 	
@95 branch on node 92
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 86 	0 	
@95 prune node: 1 / 2 or (lb 37.000000 >= ub 37.000000)
Attack Pattern: 10 	17 	
@95 branch on node 10
Attack Pattern: 10 	17 	
@95 branch on node 17
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 10 	61 	
@95 branch on node 61
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 10 	84 	
@95 branch on node 84
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 10 	96 	
@95 branch on node 96
update upper bound from 37.000000 to 36.000000
@95 optimal solution found: ub is 36.000000 and masterbound is 37.000000
nattacks: 2
first attack: 10
@98 masteriteration 6: objective value 36.000000.
@97 Set up Glorie model 6.
Attack Pattern: 17 	21 	
update upper bound from 100000000000000000000.000000 to 37.000000
@95 branch on node 17
Attack Pattern: 17 	21 	
@95 branch on node 21
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	64 	
@95 branch on node 64
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	39 	
@95 branch on node 39
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	38 	
@95 branch on node 38
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	32 	
@95 branch on node 32
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	89 	
@95 branch on node 89
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	50 	
@95 branch on node 50
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	36 	
@95 branch on node 36
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	41 	
@95 branch on node 41
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	83 	
@95 branch on node 83
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	94 	
@95 branch on node 94
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	78 	
@95 branch on node 78
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	98 	
@95 branch on node 98
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	8 	
@95 branch on node 8
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	31 	
@95 branch on node 31
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	85 	
@95 branch on node 85
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	28 	
@95 branch on node 28
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	99 	
@95 branch on node 99
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	84 	
@95 branch on node 84
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	22 	
@95 branch on node 22
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	10 	
@95 branch on node 10
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	91 	
@95 branch on node 91
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 17 	9 	
@95 branch on node 9
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 17 	69 	
@95 branch on node 69
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 17 	70 	
@95 branch on node 70
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 17 	12 	
@95 branch on node 12
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 17 	63 	
@95 branch on node 63
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 17 	57 	
@95 branch on node 57
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 17 	13 	
@95 branch on node 13
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 17 	88 	
@95 branch on node 88
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 17 	67 	
@95 branch on node 67
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 17 	40 	
@95 branch on node 40
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 17 	97 	
@95 branch on node 97
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 17 	75 	
@95 branch on node 75
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 17 	3 	
@95 branch on node 3
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 17 	20 	
@95 branch on node 20
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 17 	11 	
@95 branch on node 11
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 17 	82 	
@95 branch on node 82
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 17 	0 	
@95 branch on node 0
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	1 	
@95 branch on node 1
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	2 	
@95 branch on node 2
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	4 	
@95 branch on node 4
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	5 	
@95 branch on node 5
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	6 	
@95 branch on node 6
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	7 	
@95 branch on node 7
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	14 	
@95 branch on node 14
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	15 	
@95 branch on node 15
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	16 	
@95 branch on node 16
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	18 	
@95 branch on node 18
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	19 	
@95 branch on node 19
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	23 	
@95 branch on node 23
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	24 	
@95 branch on node 24
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	25 	
@95 branch on node 25
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	26 	
@95 branch on node 26
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	27 	
@95 branch on node 27
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	29 	
@95 branch on node 29
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	30 	
@95 branch on node 30
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	33 	
@95 branch on node 33
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	34 	
@95 branch on node 34
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	35 	
@95 branch on node 35
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	37 	
@95 branch on node 37
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	42 	
@95 branch on node 42
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	43 	
@95 branch on node 43
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	44 	
@95 branch on node 44
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	45 	
@95 branch on node 45
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	46 	
@95 branch on node 46
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	47 	
@95 branch on node 47
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	48 	
@95 branch on node 48
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	49 	
@95 branch on node 49
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	51 	
@95 branch on node 51
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	52 	
@95 branch on node 52
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	53 	
@95 branch on node 53
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	54 	
@95 branch on node 54
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	55 	
@95 branch on node 55
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	56 	
@95 branch on node 56
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	58 	
@95 branch on node 58
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	59 	
@95 branch on node 59
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	60 	
@95 branch on node 60
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	61 	
@95 branch on node 61
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	62 	
@95 branch on node 62
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	65 	
@95 branch on node 65
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	66 	
@95 branch on node 66
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	68 	
@95 branch on node 68
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	71 	
@95 branch on node 71
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	72 	
@95 branch on node 72
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	73 	
@95 branch on node 73
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	74 	
@95 branch on node 74
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	76 	
@95 branch on node 76
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	77 	
@95 branch on node 77
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	79 	
@95 branch on node 79
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	80 	
@95 branch on node 80
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	81 	
@95 branch on node 81
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	86 	
@95 branch on node 86
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	87 	
@95 branch on node 87
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	90 	
@95 branch on node 90
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	92 	
@95 branch on node 92
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	93 	
@95 branch on node 93
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	95 	
@95 branch on node 95
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 17 	96 	
@95 branch on node 96
Attack Pattern: 61 	21 	
@95 branch on node 61
Attack Pattern: 61 	21 	
@95 branch on node 21
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	64 	
@95 branch on node 64
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	39 	
@95 branch on node 39
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	38 	
@95 branch on node 38
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	32 	
@95 branch on node 32
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	89 	
@95 branch on node 89
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	50 	
@95 branch on node 50
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	36 	
@95 branch on node 36
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	41 	
@95 branch on node 41
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	83 	
@95 branch on node 83
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	94 	
@95 branch on node 94
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	78 	
@95 branch on node 78
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	98 	
@95 branch on node 98
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	8 	
@95 branch on node 8
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	31 	
@95 branch on node 31
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	85 	
@95 branch on node 85
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	28 	
@95 branch on node 28
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	99 	
@95 branch on node 99
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	84 	
@95 branch on node 84
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	22 	
@95 branch on node 22
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	10 	
@95 branch on node 10
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	91 	
@95 branch on node 91
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 61 	9 	
@95 branch on node 9
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 61 	69 	
@95 branch on node 69
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 61 	70 	
@95 branch on node 70
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 61 	12 	
@95 branch on node 12
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 61 	63 	
@95 branch on node 63
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 61 	57 	
@95 branch on node 57
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 61 	13 	
@95 branch on node 13
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 61 	88 	
@95 branch on node 88
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 61 	67 	
@95 branch on node 67
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 61 	40 	
@95 branch on node 40
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 61 	97 	
@95 branch on node 97
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 61 	75 	
@95 branch on node 75
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 37.000000)
Attack Pattern: 61 	3 	
@95 branch on node 3
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 61 	20 	
@95 branch on node 20
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 61 	11 	
@95 branch on node 11
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 61 	82 	
@95 branch on node 82
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 37.000000)
Attack Pattern: 61 	0 	
@95 branch on node 0
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	1 	
@95 branch on node 1
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	2 	
@95 branch on node 2
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	4 	
@95 branch on node 4
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	5 	
@95 branch on node 5
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	6 	
@95 branch on node 6
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	7 	
@95 branch on node 7
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	14 	
@95 branch on node 14
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	15 	
@95 branch on node 15
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	16 	
@95 branch on node 16
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	18 	
@95 branch on node 18
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	19 	
@95 branch on node 19
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	23 	
@95 branch on node 23
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	24 	
@95 branch on node 24
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	25 	
@95 branch on node 25
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	26 	
@95 branch on node 26
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	27 	
@95 branch on node 27
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	29 	
@95 branch on node 29
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	30 	
@95 branch on node 30
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	33 	
@95 branch on node 33
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	34 	
@95 branch on node 34
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	35 	
@95 branch on node 35
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	37 	
@95 branch on node 37
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	42 	
@95 branch on node 42
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	43 	
@95 branch on node 43
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	44 	
@95 branch on node 44
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	45 	
@95 branch on node 45
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	46 	
@95 branch on node 46
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	47 	
@95 branch on node 47
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	48 	
@95 branch on node 48
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	49 	
@95 branch on node 49
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	51 	
@95 branch on node 51
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	52 	
@95 branch on node 52
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	53 	
@95 branch on node 53
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	54 	
@95 branch on node 54
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	55 	
@95 branch on node 55
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	56 	
@95 branch on node 56
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	58 	
@95 branch on node 58
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	59 	
@95 branch on node 59
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	60 	
@95 branch on node 60
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	62 	
@95 branch on node 62
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	65 	
@95 branch on node 65
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	66 	
@95 branch on node 66
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	68 	
@95 branch on node 68
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	71 	
@95 branch on node 71
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	72 	
@95 branch on node 72
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	73 	
@95 branch on node 73
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	74 	
@95 branch on node 74
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	76 	
@95 branch on node 76
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	77 	
@95 branch on node 77
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	79 	
@95 branch on node 79
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	80 	
@95 branch on node 80
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	81 	
@95 branch on node 81
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	86 	
@95 branch on node 86
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	87 	
@95 branch on node 87
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	90 	
@95 branch on node 90
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	92 	
@95 branch on node 92
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	93 	
@95 branch on node 93
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	95 	
@95 branch on node 95
@95 prune node: 2 / 2 or (lb 36.000000 >= ub 37.000000)
Attack Pattern: 61 	96 	
@95 branch on node 96
Attack Pattern: 87 	21 	
@95 branch on node 87
Attack Pattern: 87 	21 	
@95 branch on node 21
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 87 	64 	
@95 branch on node 64
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 87 	39 	
@95 branch on node 39
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 37.000000)
Attack Pattern: 87 	38 	
@95 branch on node 38
update upper bound from 37.000000 to 36.000000
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	32 	
@95 branch on node 32
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	89 	
@95 branch on node 89
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	50 	
@95 branch on node 50
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	36 	
@95 branch on node 36
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	41 	
@95 branch on node 41
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	83 	
@95 branch on node 83
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	94 	
@95 branch on node 94
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	78 	
@95 branch on node 78
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	98 	
@95 branch on node 98
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	8 	
@95 branch on node 8
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	31 	
@95 branch on node 31
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	85 	
@95 branch on node 85
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	28 	
@95 branch on node 28
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	99 	
@95 branch on node 99
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	84 	
@95 branch on node 84
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	22 	
@95 branch on node 22
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	10 	
@95 branch on node 10
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	91 	
@95 branch on node 91
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 87 	9 	
@95 branch on node 9
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 36.000000)
Attack Pattern: 87 	69 	
@95 branch on node 69
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 36.000000)
Attack Pattern: 87 	70 	
@95 branch on node 70
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 36.000000)
Attack Pattern: 87 	12 	
@95 branch on node 12
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 36.000000)
Attack Pattern: 87 	63 	
@95 branch on node 63
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 36.000000)
Attack Pattern: 87 	57 	
@95 branch on node 57
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 36.000000)
Attack Pattern: 87 	13 	
@95 branch on node 13
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 36.000000)
Attack Pattern: 87 	88 	
@95 branch on node 88
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 36.000000)
Attack Pattern: 87 	67 	
@95 branch on node 67
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 36.000000)
Attack Pattern: 87 	40 	
@95 branch on node 40
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 36.000000)
Attack Pattern: 87 	97 	
@95 branch on node 97
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 36.000000)
Attack Pattern: 87 	75 	
@95 branch on node 75
@95 prune node: 2 / 2 or (lb 33.000000 >= ub 36.000000)
Attack Pattern: 87 	3 	
@95 branch on node 3
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 36.000000)
Attack Pattern: 87 	20 	
@95 branch on node 20
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 36.000000)
Attack Pattern: 87 	11 	
@95 branch on node 11
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 36.000000)
Attack Pattern: 87 	82 	
@95 branch on node 82
@95 prune node: 2 / 2 or (lb 34.000000 >= ub 36.000000)
Attack Pattern: 87 	0 	
@95 prune node: 1 / 2 or (lb 36.000000 >= ub 36.000000)
Attack Pattern: 96 	21 	
@95 branch on node 96
Attack Pattern: 96 	21 	
@95 branch on node 21
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 96 	64 	
@95 branch on node 64
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 96 	39 	
@95 branch on node 39
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 96 	38 	
@95 branch on node 38
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 96 	32 	
@95 branch on node 32
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 96 	89 	
@95 branch on node 89
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 96 	50 	
@95 branch on node 50
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 96 	36 	
@95 branch on node 36
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 96 	41 	
@95 branch on node 41
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 96 	83 	
@95 branch on node 83
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 96 	94 	
@95 branch on node 94
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 96 	78 	
@95 branch on node 78
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 96 	98 	
@95 branch on node 98
@95 prune node: 2 / 2 or (lb 32.000000 >= ub 36.000000)
Attack Pattern: 96 	8 	
@95 branch on node 8
@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3601.120000 seconds (stage 2: 2852.880000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       3       8
[scenario]    1:	      11      13
[scenario]    2:	       3      10
[scenario]    3:	       3      12
[scenario]    4:	      10      96
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 338619 (338618 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 1686 initial, 1686 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1667089415
-----------------------------
Sun Oct 30 02:23:35 CEST 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_7.txt ===========
-----------------------------
Thu Nov 24 11:38:28 CET 2022
-----------------------------
@03 1669286308
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_7.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_7.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 156324

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 3235101
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	2.45
Create the model
Time to create master model:	7.82
Solve the model
@99 Start master loop of trilevel optimization algorithm.
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 5280.800000 seconds (stage 2: 0.000000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 3391526 (3391525 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669291593
-----------------------------
Thu Nov 24 13:06:33 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_8.txt ===========
-----------------------------
Thu Nov 24 11:38:28 CET 2022
-----------------------------
@03 1669286308
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_8.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_8.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 68251

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 2456639
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	1.7
Create the model
Time to create master model:	5.65
Solve the model
@99 Start master loop of trilevel optimization algorithm.
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3617.810000 seconds (stage 2: 0.000000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2524991 (2524990 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289930
-----------------------------
Thu Nov 24 12:38:50 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_9.txt ===========
-----------------------------
Thu Nov 24 11:38:29 CET 2022
-----------------------------
@03 1669286309
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_9.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_9.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 129024

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 6930447
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	4.42
Create the model
Time to create master model:	13.06
Solve the model
@99 Start master loop of trilevel optimization algorithm.
memory limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 146.600000 seconds (stage 2: 0.000000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 7059572 (7059571 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669286463
-----------------------------
Thu Nov 24 11:41:03 CET 2022
-----------------------------

=ready=
Linux mcs-computeA009 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_10.txt ===========
-----------------------------
Thu Nov 24 11:38:29 CET 2022
-----------------------------
@03 1669286309
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_10.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_10.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 66143

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 2878692
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	3.07
Create the model
Time to create master model:	9.36
Solve the model
@99 Start master loop of trilevel optimization algorithm.
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 7342.480000 seconds (stage 2: 0.000000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2944936 (2944935 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669293664
-----------------------------
Thu Nov 24 13:41:04 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_11.txt ===========
-----------------------------
Thu Nov 24 11:38:30 CET 2022
-----------------------------
@03 1669286310
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_11.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_11.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 52645

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 680436
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.48
Create the model
Time to create master model:	1.32
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 61.000000.
@97 Set up Glorie model 1.
Attack Pattern: 4 	5 	
update upper bound from 100000000000000000000.000000 to 57.000000
@95 optimal solution found: ub is 57.000000 and masterbound is 61.000000
nattacks: 2
first attack: 4
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3817.680000 seconds (stage 2: 88.790000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       4       5
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1466362 (1466361 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 500 initial, 500 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290130
-----------------------------
Thu Nov 24 12:42:10 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_12.txt ===========
-----------------------------
Thu Nov 24 11:38:30 CET 2022
-----------------------------
@03 1669286310
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_12.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_12.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 34167

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1184510
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.78
Create the model
Time to create master model:	2.12
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 66.000000.
@97 Set up Glorie model 1.
Attack Pattern: 0 	2 	
update upper bound from 100000000000000000000.000000 to 62.000000
@95 optimal solution found: ub is 62.000000 and masterbound is 66.000000
nattacks: 2
first attack: 0
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3612.590000 seconds (stage 2: 830.040000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       0       2
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2437550 (2437549 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 492 initial, 492 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289926
-----------------------------
Thu Nov 24 12:38:46 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_13.txt ===========
-----------------------------
Thu Nov 24 11:38:31 CET 2022
-----------------------------
@03 1669286311
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_13.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_13.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 76579

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 886289
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.65
Create the model
Time to create master model:	1.87
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 58.000000.
@97 Set up Glorie model 1.
Attack Pattern: 0 	1 	
update upper bound from 100000000000000000000.000000 to 56.000000
@95 optimal solution found: ub is 56.000000 and masterbound is 58.000000
nattacks: 2
first attack: 0
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 4218.510000 seconds (stage 2: 516.740000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       0       1
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1925936 (1925935 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 500 initial, 500 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290533
-----------------------------
Thu Nov 24 12:48:53 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_14.txt ===========
-----------------------------
Thu Nov 24 11:38:32 CET 2022
-----------------------------
@03 1669286312
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_14.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_14.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 18129

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1055222
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.74
Create the model
Time to create master model:	2.16
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 50.000000.
@97 Set up Glorie model 1.
Attack Pattern: 12 	22 	
update upper bound from 100000000000000000000.000000 to 48.000000
@95 optimal solution found: ub is 48.000000 and masterbound is 50.000000
nattacks: 2
first attack: 12
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3612.990000 seconds (stage 2: 702.280000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	      12      22
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2146898 (2146897 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 492 initial, 492 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289928
-----------------------------
Thu Nov 24 12:38:48 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_15.txt ===========
-----------------------------
Thu Nov 24 11:38:32 CET 2022
-----------------------------
@03 1669286312
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_15.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_15.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 21628

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1098176
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.71
Create the model
Time to create master model:	2.73
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 59.000000.
@97 Set up Glorie model 1.
Attack Pattern: 0 	5 	
update upper bound from 100000000000000000000.000000 to 57.000000
@95 optimal solution found: ub is 57.000000 and masterbound is 59.000000
nattacks: 2
first attack: 0
@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3606.540000 seconds (stage 2: 2145.500000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       0       5
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2239804 (2239803 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 492 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289922
-----------------------------
Thu Nov 24 12:38:42 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_16.txt ===========
-----------------------------
Thu Nov 24 11:38:32 CET 2022
-----------------------------
@03 1669286312
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_16.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_16.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 37344

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 826521
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.6
Create the model
Time to create master model:	1.92
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 50.000000.
@97 Set up Glorie model 1.
Attack Pattern: 3 	9 	
update upper bound from 100000000000000000000.000000 to 46.000000
@95 optimal solution found: ub is 46.000000 and masterbound is 50.000000
nattacks: 2
first attack: 3
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3608.960000 seconds (stage 2: 215.040000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       3       9
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1727928 (1727927 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 496 initial, 496 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289924
-----------------------------
Thu Nov 24 12:38:44 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_17.txt ===========
-----------------------------
Thu Nov 24 11:38:34 CET 2022
-----------------------------
@03 1669286314
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_17.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_17.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 21030

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 118522
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.08
Create the model
Time to create master model:	0.28
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 44.000000.
@97 Set up Glorie model 1.
Attack Pattern: 1 	2 	
update upper bound from 100000000000000000000.000000 to 42.000000
@95 optimal solution found: ub is 42.000000 and masterbound is 44.000000
nattacks: 2
first attack: 1
@98 masteriteration 2: objective value 43.000000.
@97 Set up Glorie model 2.
Attack Pattern: 2 	3 	
update upper bound from 100000000000000000000.000000 to 41.000000
@95 optimal solution found: ub is 41.000000 and masterbound is 43.000000
nattacks: 2
first attack: 2
@98 masteriteration 3: objective value 42.000000.
@97 Set up Glorie model 3.
Attack Pattern: 5 	11 	
update upper bound from 100000000000000000000.000000 to 40.000000
@95 optimal solution found: ub is 40.000000 and masterbound is 42.000000
nattacks: 2
first attack: 5
@98 masteriteration 4: objective value 42.000000.
@97 Set up Glorie model 4.
Attack Pattern: 14 	15 	
update upper bound from 100000000000000000000.000000 to 41.000000
@95 optimal solution found: ub is 41.000000 and masterbound is 42.000000
nattacks: 2
first attack: 14
@98 masteriteration 5: objective value 42.000000.
@97 Set up Glorie model 5.
Attack Pattern: 2 	19 	
update upper bound from 100000000000000000000.000000 to 41.000000
@95 optimal solution found: ub is 41.000000 and masterbound is 42.000000
nattacks: 2
first attack: 2
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3605.380000 seconds (stage 2: 139.720000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       1       2
[scenario]    1:	       2       3
[scenario]    2:	       5      11
[scenario]    3:	      14      15
[scenario]    4:	       2      19
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 837903 (837902 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 1686 initial, 1686 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289921
-----------------------------
Thu Nov 24 12:38:41 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_18.txt ===========
-----------------------------
Thu Nov 24 11:38:35 CET 2022
-----------------------------
@03 1669286315
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_18.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_18.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 20661

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1262551
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.97
Create the model
Time to create master model:	2.81
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 61.000000.
@97 Set up Glorie model 1.
Attack Pattern: 2 	3 	
@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3860.050000 seconds (stage 2: 676.000000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1283313 (1283312 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290178
-----------------------------
Thu Nov 24 12:42:58 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_19.txt ===========
-----------------------------
Thu Nov 24 11:38:35 CET 2022
-----------------------------
@03 1669286315
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_19.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_19.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 77016

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1248490
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.93
Create the model
Time to create master model:	2.67
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 52.000000.
@97 Set up Glorie model 1.
Attack Pattern: 1 	2 	
update upper bound from 100000000000000000000.000000 to 50.000000
@95 optimal solution found: ub is 50.000000 and masterbound is 52.000000
nattacks: 2
first attack: 1
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3652.450000 seconds (stage 2: 581.970000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       1       2
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2651210 (2651209 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 496 initial, 496 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289972
-----------------------------
Thu Nov 24 12:39:32 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_20.txt ===========
-----------------------------
Thu Nov 24 11:38:36 CET 2022
-----------------------------
@03 1669286316
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_20.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_20.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 44954

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1134941
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.9
Create the model
Time to create master model:	2.56
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 54.000000.
@97 Set up Glorie model 1.
Attack Pattern: 1 	2 	
update upper bound from 100000000000000000000.000000 to 52.000000
@95 optimal solution found: ub is 52.000000 and masterbound is 54.000000
nattacks: 2
first attack: 1
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3614.210000 seconds (stage 2: 996.300000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       1       2
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2359988 (2359987 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 496 initial, 496 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289935
-----------------------------
Thu Nov 24 12:38:55 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_21.txt ===========
-----------------------------
Thu Nov 24 11:38:37 CET 2022
-----------------------------
@03 1669286317
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_21.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_21.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 33610

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 799806
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.63
Create the model
Time to create master model:	1.74
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 55.000000.
@97 Set up Glorie model 1.
Attack Pattern: 0 	5 	
update upper bound from 100000000000000000000.000000 to 50.000000
@95 optimal solution found: ub is 50.000000 and masterbound is 55.000000
nattacks: 2
first attack: 0
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3794.740000 seconds (stage 2: 406.340000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       0       5
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1667027 (1667026 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 490 initial, 490 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290115
-----------------------------
Thu Nov 24 12:41:55 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_22.txt ===========
-----------------------------
Thu Nov 24 11:38:38 CET 2022
-----------------------------
@03 1669286318
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_22.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_22.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 40002

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1327392
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.97
Create the model
Time to create master model:	3.17
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 56.000000.
@97 Set up Glorie model 1.
Attack Pattern: 0 	38 	
update upper bound from 100000000000000000000.000000 to 54.000000
@95 optimal solution found: ub is 54.000000 and masterbound is 56.000000
nattacks: 2
first attack: 0
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 4360.160000 seconds (stage 2: 427.780000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       0      38
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2734983 (2734982 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 490 initial, 490 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290682
-----------------------------
Thu Nov 24 12:51:22 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_23.txt ===========
-----------------------------
Thu Nov 24 11:38:38 CET 2022
-----------------------------
@03 1669286318
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_23.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_23.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 48125

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 313185
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.23
Create the model
Time to create master model:	0.68
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 59.000000.
@97 Set up Glorie model 1.
Attack Pattern: 2 	3 	
update upper bound from 100000000000000000000.000000 to 57.000000
@95 optimal solution found: ub is 57.000000 and masterbound is 59.000000
nattacks: 2
first attack: 2
@98 masteriteration 2: objective value 57.000000.
@97 Set up Glorie model 2.
Attack Pattern: 2 	7 	
update upper bound from 100000000000000000000.000000 to 56.000000
@95 optimal solution found: ub is 56.000000 and masterbound is 57.000000
nattacks: 2
first attack: 2
@98 masteriteration 3: objective value 56.000000.
@97 Set up Glorie model 3.
Attack Pattern: 0 	3 	
update upper bound from 100000000000000000000.000000 to 55.000000
@95 optimal solution found: ub is 55.000000 and masterbound is 56.000000
nattacks: 2
first attack: 0
@98 masteriteration 4: objective value 56.000000.
@97 Set up Glorie model 4.
Attack Pattern: 0 	2 	
update upper bound from 100000000000000000000.000000 to 56.000000
@95 branch on node 0
Attack Pattern: 0 	2 	
@95 branch on node 2
@95 prune node: 2 / 2 or (lb 51.000000 >= ub 56.000000)
Attack Pattern: 0 	42 	
@95 branch on node 42
@95 prune node: 2 / 2 or (lb 51.000000 >= ub 56.000000)
Attack Pattern: 0 	86 	
@95 branch on node 86
update upper bound from 56.000000 to 54.000000
@95 optimal solution found: ub is 54.000000 and masterbound is 56.000000
nattacks: 2
first attack: 0
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3611.920000 seconds (stage 2: 730.360000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       2       3
[scenario]    1:	       2       7
[scenario]    2:	       0       3
[scenario]    3:	       0      86
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1807043 (1807042 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 1389 initial, 1389 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289933
-----------------------------
Thu Nov 24 12:38:53 CET 2022
-----------------------------

=ready=
Linux mcs-computeA006 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_24.txt ===========
-----------------------------
Thu Nov 24 11:38:39 CET 2022
-----------------------------
@03 1669286319
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_24.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_24.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 50373

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1031586
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.78
Create the model
Time to create master model:	2.13
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 49.000000.
@97 Set up Glorie model 1.
Attack Pattern: 2 	3 	
update upper bound from 100000000000000000000.000000 to 46.000000
@95 optimal solution found: ub is 46.000000 and masterbound is 49.000000
nattacks: 2
first attack: 2
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3611.770000 seconds (stage 2: 638.350000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       2       3
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2164114 (2164113 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 492 initial, 492 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289935
-----------------------------
Thu Nov 24 12:38:55 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_25.txt ===========
-----------------------------
Thu Nov 24 11:38:42 CET 2022
-----------------------------
@03 1669286322
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_25.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_25.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 49425

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 796797
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.61
Create the model
Time to create master model:	2.05
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 48.000000.
@97 Set up Glorie model 1.
Attack Pattern: 9 	13 	
update upper bound from 100000000000000000000.000000 to 46.000000
@95 optimal solution found: ub is 46.000000 and masterbound is 48.000000
nattacks: 2
first attack: 9
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3839.780000 seconds (stage 2: 237.770000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       9      13
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1692643 (1692642 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 498 initial, 498 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290165
-----------------------------
Thu Nov 24 12:42:45 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_26.txt ===========
-----------------------------
Thu Nov 24 11:38:42 CET 2022
-----------------------------
@03 1669286322
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_26.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_26.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 51796

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1953320
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	1.57
Create the model
Time to create master model:	4.62
Solve the model
@99 Start master loop of trilevel optimization algorithm.
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3822.870000 seconds (stage 2: 0.000000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2005217 (2005216 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290149
-----------------------------
Thu Nov 24 12:42:29 CET 2022
-----------------------------

=ready=
Linux mcs-computeA009 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_27.txt ===========
-----------------------------
Thu Nov 24 11:38:42 CET 2022
-----------------------------
@03 1669286322
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_27.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_27.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 29170

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 993213
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.96
Create the model
Time to create master model:	2.82
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 49.000000.
@97 Set up Glorie model 1.
Attack Pattern: 2 	4 	
@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 4029.440000 seconds (stage 2: 848.970000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1022484 (1022483 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669290359
-----------------------------
Thu Nov 24 12:45:59 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_28.txt ===========
-----------------------------
Thu Nov 24 11:38:43 CET 2022
-----------------------------
@03 1669286323
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_28.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_28.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 62554

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 1312427
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	1.04
Create the model
Time to create master model:	3.23
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 66.000000.
@97 Set up Glorie model 1.
Attack Pattern: 3 	6 	
@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3656.810000 seconds (stage 2: 1858.080000, stage 3: 0.000000).

[patterns]
Used attack patterns:
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 1375082 (1375081 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 201 initial, 201 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289982
-----------------------------
Thu Nov 24 12:39:42 CET 2022
-----------------------------

=ready=
Linux mcs-computeA007 5.10.11-1.el7.elrepo.x86_64 #1 SMP Tue Jan 26 10:44:32 EST 2021 x86_64 x86_64 x86_64 GNU/Linux
@01 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_29.txt ===========
-----------------------------
Thu Nov 24 11:38:43 CET 2022
-----------------------------
@03 1669286323
/home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../bin/fullrecoursekidney.linux.x86_64.gnu.opt.spx2 /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_29.txt 2 -t 3600 -m 24000 -n 2100000000 -d 10000 -s /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set
SCIP version 8.0.2 [precision: 8 byte] [memory: block] [mode: optimized] [LP solver: Soplex 6.0.2] [GitHash: 5f0473c4fb]
Copyright (C) 2002-2022 Konrad-Zuse-Zentrum fuer Informationstechnik Berlin (ZIB)


Reading parameters from </home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../settings/method3-cyc4-chain4-liftFALSE-policy1.set>.

Changed settings:
misc/usesymmetry = 0
kidney/maxcyclelength = 4
kidney/maxchainlength = 4
kidney/method = 3
kidney/liftbenderscuts = FALSE
kidney/recoursepolicy = 1

Setting time limit to 3600.
Setting memory limit to 24000.
Setting node limit to 2100000000.
Setting display frequency to 10000.

Reading the graph
Reading graph from file /home/mcs001/s145344/20221025/FullRecourseKEP/code/check/../../instances/KlimentovaInstances100/Klimentova_100_29.txt
Finding the cycles
Enumerating all cycles
Number of cycles: 50745

Finding the chains
Enumerating all chains
Chain length maximum: 4
Number of chains: 993256
Strengthening the node bounds
Find the triplets
Time needed to read graph and detecting cycles/chains/triplets:	0.79
Create the model
Time to create master model:	2.33
Solve the model
@99 Start master loop of trilevel optimization algorithm.
@98 masteriteration 1: objective value 58.000000.
@97 Set up Glorie model 1.
Attack Pattern: 3 	5 	
update upper bound from 100000000000000000000.000000 to 56.000000
@95 optimal solution found: ub is 56.000000 and masterbound is 58.000000
nattacks: 2
first attack: 3
time limit reached@05================================================================================
   ================================   STATISTICS   ================================
[suboptimal] terminated after 3614.010000 seconds (stage 2: 710.560000, stage 3: 0.000000).

[patterns]
Used attack patterns:
[scenario]    0:	       3       5
@06================================================================================

SCIP Status        : problem creation / modification
Total Time         :       0.00
  reading          :       0.00
Original Problem   :
  Problem name     : name
  Variables        : 2088200 (2088199 binary, 0 integer, 0 implicit integer, 1 continuous)
  Constraints      : 496 initial, 496 maximal
  Objective        : maximize, 1 non-zeros (abs.min = 1, abs.max = 1)
Free the model
@04 1669289941
-----------------------------
Thu Nov 24 12:39:01 CET 2022
-----------------------------

=ready=
